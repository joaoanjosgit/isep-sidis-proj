Index: .idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,19 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanQueryServiceMain(1)\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"2121000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703608858516</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703608858516</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision d3281974458bad6afea7fc2a134adb37c79855e4)
-+++ b/.idea/workspace.xml	(date 1703615637355)
-@@ -76,7 +76,7 @@
-       </set>
-     </option>
-   </component>
--  <component name="RunManager" selected="Spring Boot.PlanQueryServiceMain(1)">
-+  <component name="RunManager" selected="Spring Boot.PlanCommandServiceMain">
-     <configuration name="PlanCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-       <module name="plan-command-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanCommandServiceMain" />
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,3018 +0,0 @@
-Index: plan-bootstrap-service/src/main/java/com/example/planbootstrap/PlanBootstrapApplication.java
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/planbootstrap/PlanBootstrapApplication.java b/plan-bootstrap-service/src/main/java/com/example/planbootstrap/PlanBootstrapApplication.java
-deleted file mode 100644
---- a/plan-bootstrap-service/src/main/java/com/example/planbootstrap/PlanBootstrapApplication.java	
-+++ /dev/null	
-@@ -1,13 +0,0 @@
--package com.example.planbootstrap;
--
--import org.springframework.boot.SpringApplication;
--import org.springframework.boot.autoconfigure.SpringBootApplication;
--
--@SpringBootApplication
--public class PlanBootstrapApplication {
--
--    public static void main(String[] args) {
--        SpringApplication.run(PlanBootstrapApplication.class, args);
--    }
--
--}
-Index: plan-bootstrap-service/src/test/java/com/example/planbootstrap/PlanBootstrapApplicationTests.java
-===================================================================
-diff --git a/plan-bootstrap-service/src/test/java/com/example/planbootstrap/PlanBootstrapApplicationTests.java b/plan-bootstrap-service/src/test/java/com/example/planbootstrap/PlanBootstrapApplicationTests.java
-deleted file mode 100644
---- a/plan-bootstrap-service/src/test/java/com/example/planbootstrap/PlanBootstrapApplicationTests.java	
-+++ /dev/null	
-@@ -1,13 +0,0 @@
--package com.example.planbootstrap;
--
--import org.junit.jupiter.api.Test;
--import org.springframework.boot.test.context.SpringBootTest;
--
--@SpringBootTest
--class PlanBootstrapApplicationTests {
--
--    @Test
--    void contextLoads() {
--    }
--
--}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java	
-@@ -0,0 +1,69 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.filestoragemanagement.api;
-+
-+import io.swagger.v3.oas.annotations.media.Schema;
-+
-+/**
-+ * <p>
-+ * code based on
-+ * https://github.com/callicoder/spring-boot-file-upload-download-rest-api-example
-+ *
-+ *
-+ */
-+@Schema(description = "Metadata about the uploaded file")
-+public class UploadFileResponse {
-+
-+	private final String fileName;
-+
-+	@Schema(description = "Absolute URL of the file")
-+	private final String fileDownloadUri;
-+
-+	@Schema(description = "Media type")
-+	private final String fileType;
-+
-+	@Schema(description = "File size in bytes")
-+	private final long size;
-+
-+	public UploadFileResponse(final String fileName, final String fileDownloadUri, final String fileType,
-+                              final long size) {
-+		this.fileName = fileName;
-+		this.fileDownloadUri = fileDownloadUri;
-+		this.fileType = fileType;
-+		this.size = size;
-+	}
-+
-+	public String getFileName() {
-+		return fileName;
-+	}
-+
-+	public String getFileDownloadUri() {
-+		return fileDownloadUri;
-+	}
-+
-+	public String getFileType() {
-+		return fileType;
-+	}
-+
-+	public long getSize() {
-+		return size;
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java	
-@@ -0,0 +1,25 @@
-+package com.example.psoft_22_23_project.filestoragemanagement.service;
-+
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.boot.context.properties.ConfigurationProperties;
-+import org.springframework.context.annotation.ComponentScan;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.stereotype.Component;
-+
-+@ConfigurationProperties("file")
-+@Configuration
-+public class FileStorageProperties {
-+	private String uploadDir;
-+
-+	public FileStorageProperties(@Value("${file.upload-dir}") String uploadDir) {
-+		this.uploadDir = uploadDir;
-+	}
-+
-+	public String getUploadDir() {
-+		return uploadDir;
-+	}
-+
-+	public void setUploadDir(String uploadDir) {
-+		this.uploadDir = uploadDir;
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java	
-@@ -0,0 +1,41 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.filestoragemanagement.service;
-+
-+/**
-+ *
-+ * @author pgsousa
-+ *
-+ */
-+public class FileStorageException extends RuntimeException {
-+	/**
-+	 *
-+	 */
-+	private static final long serialVersionUID = 1L;
-+
-+	public FileStorageException(final String message) {
-+		super(message);
-+	}
-+
-+	public FileStorageException(final String message, final Throwable cause) {
-+		super(message, cause);
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java	
-@@ -0,0 +1,107 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.filestoragemanagement.service;
-+
-+import com.example.psoft_22_23_project.exceptions.NotFoundException;
-+import com.example.psoft_22_23_project.utils.Utils;
-+import org.springframework.beans.factory.annotation.Autowired;
-+import org.springframework.core.io.Resource;
-+import org.springframework.core.io.UrlResource;
-+import org.springframework.stereotype.Service;
-+import org.springframework.web.multipart.MultipartFile;
-+
-+import java.io.IOException;
-+import java.net.MalformedURLException;
-+import java.nio.file.Files;
-+import java.nio.file.Path;
-+import java.nio.file.Paths;
-+import java.nio.file.StandardCopyOption;
-+import java.util.Optional;
-+import java.util.UUID;
-+
-+/**
-+ * <p>
-+ * code based on
-+ * https://github.com/callicoder/spring-boot-file-upload-download-rest-api-example
-+ *
-+ *
-+ */
-+@Service
-+public class FileStorageService {
-+
-+	private final Path fileStorageLocation;
-+
-+	@Autowired
-+	public FileStorageService(final FileStorageProperties fileStorageProperties) {
-+		this.fileStorageLocation = Paths.get(fileStorageProperties.getUploadDir()).toAbsolutePath().normalize();
-+
-+		try {
-+			Files.createDirectories(fileStorageLocation);
-+		} catch (final Exception ex) {
-+			throw new FileStorageException("Could not create the directory where the uploaded files will be stored.",
-+					ex);
-+		}
-+	}
-+
-+	public String storeFile(final String prefix, final MultipartFile file) {
-+		final String fileName = Utils.transformSpaces(prefix) + "_" + determineFileName(file);
-+
-+		// Copy file to the target location (Replacing existing file with the same name)
-+		try {
-+			final Path targetLocation = fileStorageLocation.resolve(fileName);
-+			Files.copy(file.getInputStream(), targetLocation, StandardCopyOption.REPLACE_EXISTING);
-+
-+			return fileName;
-+		} catch (final IOException ex) {
-+			throw new FileStorageException("Could not store file " + fileName + ". Please try again!", ex);
-+		}
-+	}
-+
-+	private String determineFileName(final MultipartFile file) {
-+//		// Normalize file name
-+//		final String fileName = StringUtils.cleanPath(file.getOriginalFilename());
-+//		// Check if the file's name contains invalid characters
-+//		if (fileName.contains("..")) {
-+//			throw new FileStorageException("Sorry! Filename contains invalid path sequence " + fileName);
-+//		}
-+//		return fileName;
-+
-+		return UUID.randomUUID().toString() + "." + getExtension(file.getOriginalFilename()).orElse("");
-+	}
-+
-+	public Optional<String> getExtension(final String filename) {
-+		return Optional.ofNullable(filename).filter(f -> f.contains("."))
-+				.map(f -> f.substring(filename.lastIndexOf(".") + 1));
-+	}
-+
-+	public Resource loadFileAsResource(final String fileName) {
-+		try {
-+			final Path filePath = fileStorageLocation.resolve(fileName).normalize();
-+			final Resource resource = new UrlResource(filePath.toUri());
-+			if (resource.exists()) {
-+				return resource;
-+			}
-+			throw new NotFoundException("File not found " + fileName);
-+		} catch (final MalformedURLException ex) {
-+			throw new NotFoundException("File not found " + fileName, ex);
-+		}
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java	
-@@ -0,0 +1,12 @@
-+package com.example.psoft_22_23_project;
-+
-+import org.springframework.boot.SpringApplication;
-+import org.springframework.boot.autoconfigure.SpringBootApplication;
-+
-+@SpringBootApplication
-+public class PlanBootstrapServiceMain {
-+
-+	public static void main(String[] args) {
-+		SpringApplication.run(PlanBootstrapServiceMain.class, args);
-+	}
-+}
-Index: plan-bootstrap-service/src/main/resources/rsa.private.key
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/resources/rsa.private.key b/plan-bootstrap-service/src/main/resources/rsa.private.key
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/resources/rsa.private.key	
-@@ -0,0 +1,52 @@
-+-----BEGIN PRIVATE KEY-----
-+MIIJQQIBADANBgkqhkiG9w0BAQEFAASCCSswggknAgEAAoICAQCK5ng3ZVnxuj3m
-+AuD+3JWnqERpHs2deoaw92DuJZUSccswQwSnEopJGqJ6zbGColgr6+p1cXmqYhz1
-+qsywpBDAdbxTe4xS18ATlcyOBfR5S/gytk57ElWJTGAelajbXgne2r/6Fe66gWfP
-+nXirXx3jXcVbeXrvj5LshJWO+thB4jXQgd+Fc8bxiNdO1mX3pl403sp92f63Cf9H
-+K4E1o4SyG9GGSWTjoE8UlhRC+Hpb8qkDlz1yw2PRDAkOqq7C6AzfwZ9JRo5iSL2c
-+HP5xglZPCwDtmMXnebLrToyXWJSymSnKlVJY530wBSMY7Kws5Av/+SmQgCGkoAeQ
-+oDSpPBoe2SsLJkuCFPEerqLz2gxkU52XYADHPsBsHbEY97GK1hzWByEZOewpW+Qy
-+p78h02EjxPpgkDBVnySnYKbIxuWDv7hdA5F51Kdj8d2LX2WNoGSSJQM6Wwxyxj7Y
-+NrTs7kaiOlUkuyOeUTgqMc2L291I4Q1LZCWe63LZf83OJYMDOueGwg0xo4S7DBZy
-+j7wdiu+WqJyEMQrZyiVsOnFY0GoGlMcXin6O0FXMiiZcVObuvk9Fo+tVw/zIwXlN
-+az2PBSoSqNacStyeY1v0XcB6hwWLwNN3rHpjFcD0bxgx3HUkQqKCAg+7nzu+JjGI
-+USBKYL4NIcfj1K4nNSjPJ11dkbQDmQIDAQABAoICAEY7LBPOckEQS1XupLcY766b
-+HSQNyCdVGZ+HJYKkjBCMaxGXAVY8wKEgD4GKWbPUxEJJAf6qBruI6l2pI+A4xKOb
-+pEKN2LDWmC8O8iPpjOh76h4yIdKGvasza/Jq97sbfGArOSCJUHELF2NZmvcDnAgn
-+lK+g5/ETJlXi4AAwg4Ikj9NCp7NBjBj6eOtK6rnibAXNlJM301vXeTUSIT3u1Rx9
-+hl6g45tYpkOhctM98hhlxOGk6hQKCYFc1YON99ljHYdRzmltfHbjksPJwTnBjkRf
-+KvP36DEXTsk9qUapKl53pTLid4WuXpUWM93ZZWE5WXvvDv4aW2hy5gBRkO71DbtE
-+RVdLKyD7uruMwPtikHzg1fOVKWEPTpIlVL3iHEDubRiBp7nhraWpcO0Pvq0FifpW
-+NFuCYG9XUsgPZL16LdtL/uBfCXb5NVfDuJz1DjM77v9Xyp9Ev+agCtxieZkDKlbX
-+nKu4hLAG08tjYpvyFv69dPEyBTiYZ97AB9vUukmfEUU6X6LeH+LJThhxOFRgwEsk
-+aQ2IP+nX9OJH0EEb6ArVuVqm731VSeNS0fvdNWEuw6amNsT8k3nRuvBYKNNVKXHJ
-+HrM0/RLJMZCd3W59mnDWeDQVuyC1aXnpTL/h858rE/7gCY+kLizN1dM3RXe+VMjH
-+R5VTbsDDucvShk8A8CTlAoIBAQDcnYPFnOsWyVBSNFaX+GSqAoGzqJKzuY9RlvXT
-+L7gfeUUGEBFfniuSlNGjxyYuQ2N3sonaxZ+BTb0EpsL2asb1tzlaZ661FYChz8qG
-+Xwp81N6gDXIF8AK+VW3w7NmlV1BaW4N/MY09UD9SCjx3I5Vpdrh7BYtvV1ogpL4y
-+4uAUs7kUpmD8tZWhtci9zKbA8M7cocI4RA6tP8Og8q6z2hTqRkXa8Q/XQk/DF/OX
-+GSPw94peVDgRLsumkEiGcLRxoT2I5Dz9f1lrjg8A+2nk13lZh0rZMiVHv9+mrocA
-+Ds24y9cwARvdVdielFfuGl5nyW6Tn4EfBVEh7Rw/9urdVm47AoIBAQChLbpsgag4
-+xWV/wbdpllr7ssSP8iZOsYfjFCALuvneZuIT2G3zK0E+qeUR8Dxx4XRfzQ87AbVi
-+bu1e992WmukWmAAGEkjftVsei7haLd8YM/tgO7qSCnMjEiX98zAGjfp6BoFzMfnA
-+H81WjN+pbcK6r8bzLkFgjf77ezNvJunqfCx04gT+ZSUssLuAVSpoB9ncfsGPW81c
-+rFlWmHPsdFPME6eiM7NMrA27wlyaaVWe3gs/TmTwvIan9t7QYWFq1pkMAt8VnWx5
-+YaXNJQNSe/T+QuR5+0DeGFMhIJkkFK+vce1UQmchqDVlWrH5QXZMlnfB4JCLfjx9
-+CZBWaCyrxBQ7AoIBABNRq9djPWb6bBE2yhp2wwHsREViTq50YmuHp7E9rYb8DKJS
-+R+Myq6gjZhRMfThx6ET0GoRQ5/3fu9yraclAYnnj+J7FE5SB9Ii29Io9ymJSFci4
-+RLLmaKcYPg9p/kkvUzcGaoZ55V9oJpNdmBvqvsvEfLUxMBuo75iKNKmqGmtVrbB0
-+PWwDzr2heJm+UR/2Nnc1pxdcRli/i7cNaWUQhOJbEwTwNS3pfaic8VTa+72/P5ux
-+DlPa4DSOz/sN5Y9JymSxb/HW9BKqFwBEA+rpP5Qqd9B7Rq54y/IBuIq1wSgcmZR3
-+lGQWf2irnuOX5Yp7JjbBMgJwacFpzR6A1eJaDj8CggEAG3sWfAWnTvapFZ1Lzl7q
-+aFvUk85vpZ8zUg5OYHGixL658TRHmtxXJX4GJobVZ31PQD5QSHlEGeJb6oNMbq8+
-+6rFD38UiU7IyNQURi56imRfT1laYuum5M9OWUrQyDgwLFt8hFykAMje55PXj9JlY
-+SEhMHY5Xa0UKooog/OSfoXFGiy82NsG8EuCXN4xNzKr6BFRAYFcArrpcCR25Nimn
-+V/ZJ8Kfr/Dihps++xj0Lcijdtg+BumIKe3zmBJV17KdmNNwQeTj8E74IbO/QnzGv
-+VeLF3d5u8u8mzVEnizVTtxAvrNwdhWmOoRdTnPICX5CQHqhRPNdrLM6Co5jjdO3b
-+nQKCAQAtrqN3+DvOlWlq9Onyv/Pal9YZhy8R0sH6eYFfdt4CGwxdCgFzuybFEfqx
-+bsn/kxbVYG4yDZ4SNOSdX4aihuvPkawv3i8EnD3cdvRUipb/+3HNHtCC9H0lg9C9
-+cBmsRnuu5jxC+n7i3b3C/SzHgxXIVJye9xud8ZBWJLk9ANnxiw2t64b+aNuUI7u0
-+qyydb+hcY1BBE9NogwwOVjiRKsnoEVO9LbYXbWBKHhbRw/gTnFRzn8fcjMG120f0
-+RzBrTG7YCVFmmDohOqUZIzawDf/lf7o0tyiGmRdq9djgS8l0/0+kkMdVTGWS2IN+
-+XVEH0VishgwbYXOJCSBlZD7h0yS2
-+-----END PRIVATE KEY-----
-Index: plan-bootstrap-service/src/main/resources/rsa.public.key
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/resources/rsa.public.key b/plan-bootstrap-service/src/main/resources/rsa.public.key
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/resources/rsa.public.key	
-@@ -0,0 +1,14 @@
-+-----BEGIN PUBLIC KEY-----
-+MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAiuZ4N2VZ8bo95gLg/tyV
-+p6hEaR7NnXqGsPdg7iWVEnHLMEMEpxKKSRqies2xgqJYK+vqdXF5qmIc9arMsKQQ
-+wHW8U3uMUtfAE5XMjgX0eUv4MrZOexJViUxgHpWo214J3tq/+hXuuoFnz514q18d
-+413FW3l674+S7ISVjvrYQeI10IHfhXPG8YjXTtZl96ZeNN7Kfdn+twn/RyuBNaOE
-+shvRhklk46BPFJYUQvh6W/KpA5c9csNj0QwJDqquwugM38GfSUaOYki9nBz+cYJW
-+TwsA7ZjF53my606Ml1iUspkpypVSWOd9MAUjGOysLOQL//kpkIAhpKAHkKA0qTwa
-+HtkrCyZLghTxHq6i89oMZFOdl2AAxz7AbB2xGPexitYc1gchGTnsKVvkMqe/IdNh
-+I8T6YJAwVZ8kp2CmyMblg7+4XQORedSnY/Hdi19ljaBkkiUDOlsMcsY+2Da07O5G
-+ojpVJLsjnlE4KjHNi9vdSOENS2Qlnuty2X/NziWDAzrnhsINMaOEuwwWco+8HYrv
-+lqichDEK2colbDpxWNBqBpTHF4p+jtBVzIomXFTm7r5PRaPrVcP8yMF5TWs9jwUq
-+EqjWnErcnmNb9F3AeocFi8DTd6x6YxXA9G8YMdx1JEKiggIPu587viYxiFEgSmC+
-+DSHH49SuJzUozyddXZG0A5kCAwEAAQ==
-+-----END PUBLIC KEY-----
-\ No newline at end of file
-Index: plan-bootstrap-service/src/main/resources/banner.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/resources/banner.txt b/plan-bootstrap-service/src/main/resources/banner.txt
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/resources/banner.txt	
-@@ -0,0 +1,7 @@
-+       _                                                        _
-+      | |                                                      | |
-+ ____ | | _____ ____      ____ ___  ____  ____  _____ ____   __| |
-+|  _ \| |(____ |  _ \    / ___) _ \|    \|    \(____ |  _ \ / _  |
-+| |_| | |/ ___ | | | |  ( (__| |_| | | | | | | / ___ | | | ( (_| |
-+|  __/ \_)_____|_| |_|   \____)___/|_|_|_|_|_|_\_____|_| |_|\____|
-+|_|
-Index: plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java b/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java	
-@@ -0,0 +1,11 @@
-+import org.junit.jupiter.api.Test;
-+import org.springframework.boot.test.context.SpringBootTest;
-+
-+//@SpringBootTest
-+class Psoft2223ProjectApplicationTests {
-+
-+	@Test
-+	void contextLoads() {
-+	}
-+
-+}
-Index: .idea/encodings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/plan-bootstrap-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/plan-command-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/plan-query-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/subscription-command-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/subscription-query-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/user-command-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/user-query-service/src/main/java\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/encodings.xml b/.idea/encodings.xml
---- a/.idea/encodings.xml	
-+++ b/.idea/encodings.xml	
-@@ -2,6 +2,7 @@
- <project version="4">
-   <component name="Encoding">
-     <file url="file://$PROJECT_DIR$/plan-bootstrap-service/src/main/java" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/plan-bootstrap-service/src/main/resources" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/plan-command-service/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/plan-query-service/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"jdk.selected.JAVA_MODULE\": \"corretto-18\",\r\n    \"last_opened_file_path\": \"C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"h2\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanBootstrapApplication\">\r\n    <configuration name=\"PlanBootstrapApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-bootstrap-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.planbootstrap.PlanBootstrapApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"2121000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703608858516</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703608858516</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"sprint3\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	
-+++ b/.idea/workspace.xml	
-@@ -5,11 +5,60 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="docs">
--      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/assets/keep-calm-and-love-jpa.png" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/banner.txt" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/rsa.private.key" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/rsa.public.key" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_06__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_06__Changes_.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33__Changes_.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20__Changes_.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21__Changes_.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33__Changes_.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/planbootstrap/PlanBootstrapApplication.java" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/application.properties" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/plan-bootstrap-service/src/test/java/com/example/planbootstrap/PlanBootstrapApplicationTests.java" beforeDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -46,31 +95,33 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent"><![CDATA[{
--  "keyToString": {
--    "RequestMappingsPanelOrder0": "0",
--    "RequestMappingsPanelOrder1": "1",
--    "RequestMappingsPanelWidth0": "75",
--    "RequestMappingsPanelWidth1": "75",
--    "RunOnceActivity.OpenProjectViewOnStart": "true",
--    "RunOnceActivity.ShowReadmeOnStart": "true",
--    "WebServerToolWindowFactoryState": "false",
--    "jdk.selected.JAVA_MODULE": "corretto-18",
--    "last_opened_file_path": "C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan",
--    "node.js.detected.package.eslint": "true",
--    "node.js.detected.package.tslint": "true",
--    "node.js.selected.package.eslint": "(autodetect)",
--    "node.js.selected.package.tslint": "(autodetect)",
--    "nodejs_package_manager_path": "npm",
--    "vue.rearranger.settings.migration": "true"
-+  <component name="PropertiesComponent">{
-+  &quot;keyToString&quot;: {
-+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
-+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
-+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
-+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
-+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/plan-bootstrap-service&quot;,
-+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
-   },
--  "keyToStringList": {
--    "DatabaseDriversLRU": [
--      "h2"
-+  &quot;keyToStringList&quot;: {
-+    &quot;DatabaseDriversLRU&quot;: [
-+      &quot;h2&quot;
-     ]
-   }
--}]]></component>
-+}</component>
-   <component name="RecentsManager">
-+    <key name="CopyFile.RECENT_KEYS">
-+      <recent name="C:\Users\Asus\Desktop\Faculdade\2023_2024\SISDIS\project\plan-bootstrap-service" />
-+    </key>
-     <key name="MoveFile.RECENT_KEYS">
-       <recent name="C:\Users\Asus\Desktop\Faculdade\2023_2024\SISDIS\project\.idea" />
-     </key>
-@@ -83,22 +134,22 @@
-       </set>
-     </option>
-   </component>
--  <component name="RunManager" selected="Spring Boot.PlanBootstrapApplication">
--    <configuration name="PlanBootstrapApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+  <component name="RunManager" selected="Spring Boot.PlanBootstrapServiceMain">
-+    <configuration name="PlanBootstrapServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-       <module name="plan-bootstrap-service" />
--      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.planbootstrap.PlanBootstrapApplication" />
-+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanBootstrapServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="PlanCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="PlanCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="PlanCommandService" nameIsGenerated="true">
-       <module name="plan-command-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanCommandServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="PlanQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="PlanQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="PlanQueryService" nameIsGenerated="true">
-       <module name="plan-query-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanQueryServiceMain" />
-       <method v="2">
-@@ -119,20 +170,33 @@
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="UserCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="UserCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="UserCommandService" nameIsGenerated="true">
-       <module name="user-command-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.UserCommandServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="UserQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="UserQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="UserQueryService" nameIsGenerated="true">
-       <module name="user-query-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.UserQueryServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
-+    <list>
-+      <item itemvalue="Spring Boot.PlanCommandServiceMain" />
-+      <item itemvalue="Spring Boot.PlanCommandServiceMain(1)" />
-+      <item itemvalue="Spring Boot.PlanQueryServiceMain" />
-+      <item itemvalue="Spring Boot.PlanQueryServiceMain(1)" />
-+      <item itemvalue="Spring Boot.UserCommandServiceMain" />
-+      <item itemvalue="Spring Boot.UserCommandServiceMain(1)" />
-+      <item itemvalue="Spring Boot.UserQueryServiceMain" />
-+      <item itemvalue="Spring Boot.UserQueryServiceMain(1)" />
-+      <item itemvalue="Spring Boot.PlanBootstrapServiceMain" />
-+      <item itemvalue="Spring Boot.SubscriptionCommandServiceMain" />
-+      <item itemvalue="Spring Boot.SubscriptionQueryServiceMain" />
-+    </list>
-   </component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-   <component name="TaskManager">
-@@ -151,7 +215,8 @@
-       <workItem from="1702984447619" duration="6967000" />
-       <workItem from="1703018341972" duration="2157000" />
-       <workItem from="1703430925339" duration="3522000" />
--      <workItem from="1703601832909" duration="2121000" />
-+      <workItem from="1703601832909" duration="1796000" />
-+      <workItem from="1703779978272" duration="1282000" />
-     </task>
-     <task id="LOCAL-00001" summary="plan-command-service">
-       <option name="closed" value="true" />
-@@ -209,15 +274,7 @@
-       <option name="project" value="LOCAL" />
-       <updated>1703434404734</updated>
-     </task>
--    <task id="LOCAL-00008" summary="docs">
--      <option name="closed" value="true" />
--      <created>1703608858516</created>
--      <option name="number" value="00008" />
--      <option name="presentableId" value="LOCAL-00008" />
--      <option name="project" value="LOCAL" />
--      <updated>1703608858516</updated>
--    </task>
--    <option name="localTasksCounter" value="9" />
-+    <option name="localTasksCounter" value="8" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -228,19 +285,7 @@
-       <map>
-         <entry key="MAIN">
-           <value>
--            <State>
--              <option name="FILTERS">
--                <map>
--                  <entry key="branch">
--                    <value>
--                      <list>
--                        <option value="sprint3" />
--                      </list>
--                    </value>
--                  </entry>
--                </map>
--              </option>
--            </State>
-+            <State />
-           </value>
-         </entry>
-       </map>
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java	
-@@ -0,0 +1,37 @@
-+package com.example.psoft_22_23_project.utils;
-+
-+import org.springframework.security.core.context.SecurityContextHolder;
-+import org.springframework.web.context.request.WebRequest;
-+
-+import javax.servlet.http.HttpServletRequest;
-+import java.util.Arrays;
-+
-+public class Utils {
-+
-+    // Gets the id of current authenticated user
-+    public static String getAuthId() {
-+        String username = SecurityContextHolder.getContext().getAuthentication().getName();
-+        return username.split(",")[0];
-+    }
-+
-+    public static String transformSpaces(String input) {
-+        String trimmed = input.trim();
-+        String replaced = trimmed.replaceAll("\\s+", " ");
-+        return replaced.replaceAll(" ", "_");
-+    }
-+
-+    public static String getBearerToken(WebRequest request){
-+        // Get the 'Authorization' header from the request
-+        String authHeader = request.getHeader("Authorization");
-+
-+        if (authHeader != null && authHeader.startsWith("Bearer ")) {
-+            // Extract the token part after "Bearer "
-+            return authHeader.substring(7);
-+        }
-+
-+        // If the 'Authorization' header is not found or doesn't have the expected format
-+        return null;
-+    }
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java	
-@@ -0,0 +1,49 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.exceptions;
-+
-+import org.springframework.http.HttpStatus;
-+import org.springframework.web.bind.annotation.ResponseStatus;
-+
-+import java.net.MalformedURLException;
-+
-+@ResponseStatus(code = HttpStatus.NOT_FOUND, reason = "Object Not Found")
-+public class NotFoundException extends RuntimeException {
-+
-+
-+	private static final long serialVersionUID = 1L;
-+
-+	public NotFoundException(final String string) {
-+		super(string);
-+	}
-+
-+	public NotFoundException(final String string, final MalformedURLException ex) {
-+		super(string, ex);
-+	}
-+
-+	public NotFoundException(final Class<?> clazz, final long id) {
-+		super(String.format("Entity %s with id %d not found", clazz.getSimpleName(), id));
-+	}
-+
-+	public NotFoundException(final Class<?> clazz, final String id) {
-+		super(String.format("Entity %s with id %s not found", clazz.getSimpleName(), id));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java	
-@@ -0,0 +1,56 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.exceptions;
-+
-+import org.springframework.http.HttpStatus;
-+import org.springframework.web.bind.annotation.ResponseStatus;
-+
-+import java.net.MalformedURLException;
-+
-+/**
-+ *
-+ * @author pgsousa
-+ *
-+ */
-+@ResponseStatus(code = HttpStatus.CONFLICT)
-+public class ConflictException extends RuntimeException {
-+
-+	/**
-+	 *
-+	 */
-+	private static final long serialVersionUID = 1L;
-+
-+	public ConflictException(final String string) {
-+		super(string);
-+	}
-+
-+	public ConflictException(final String string, final MalformedURLException ex) {
-+		super(string, ex);
-+	}
-+
-+	public ConflictException(final Class<?> clazz, final long id) {
-+		super(String.format("Entity %s with id %d not found", clazz.getSimpleName(), id));
-+	}
-+
-+	public ConflictException(final Class<?> clazz, final String id) {
-+		super(String.format("Entity %s with id %s not found", clazz.getSimpleName(), id));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java	
-@@ -0,0 +1,106 @@
-+package com.example.psoft_22_23_project.rabbit.config;
-+
-+import org.springframework.amqp.core.*;
-+import org.springframework.amqp.rabbit.connection.ConnectionFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
-+import org.springframework.amqp.support.converter.MessageConverter;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.context.annotation.Configuration;
-+
-+@Configuration
-+public class PlanRabbitMQConfig {
-+
-+//    @Value("${rabbitmp.queue.create}")
-+//    private String createPlanQueue;
-+
-+    @Value("${rabbitmp.exchange.plan.create}")
-+    private String createPlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.create}")
-+    private String createPlanRoutingKey;
-+
-+    @Value("${rabbitmp.exchange.plan.update}")
-+    private String updatePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.update}")
-+    private String updatePlanRoutingKey;
-+
-+    @Value("${rabbitmp.exchange.plan.delete}")
-+    private String deletePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.delete}")
-+    private String deletePlanRoutingKey;
-+
-+
-+    //Create Plan
-+    @Bean
-+    public TopicExchange createPlanExchange() {
-+        return new TopicExchange(createPlanExchange);
-+    }
-+
-+    @Bean
-+    public AnonymousQueue createPlanQueue() {
-+        return new AnonymousQueue();
-+    }
-+
-+    @Bean
-+    public Binding createPlanBinding() {
-+        return BindingBuilder
-+                .bind(createPlanQueue())
-+                .to(createPlanExchange())
-+                .with(createPlanRoutingKey);
-+    }
-+
-+
-+    //Update Plan
-+    @Bean
-+    public TopicExchange updatePlanExchange() {
-+        return new TopicExchange(updatePlanExchange);
-+    }
-+
-+    @Bean
-+    public AnonymousQueue updatePlanQueue() {
-+        return new AnonymousQueue();
-+    }
-+    @Bean
-+    public Binding updatePlanBinding() {
-+        return BindingBuilder
-+                .bind(updatePlanQueue())
-+                .to(updatePlanExchange())
-+                .with(updatePlanRoutingKey);
-+    }
-+
-+    //Delete Plan
-+    @Bean
-+    public TopicExchange deletePlanExchange() {
-+        return new TopicExchange(deletePlanExchange);
-+    }
-+
-+    @Bean
-+    public AnonymousQueue deletePlanQueue() {
-+        return new AnonymousQueue();
-+    }
-+    @Bean
-+    public Binding deletePlanBinding() {
-+        return BindingBuilder
-+                .bind(deletePlanQueue())
-+                .to(deletePlanExchange())
-+                .with(deletePlanRoutingKey);
-+    }
-+
-+    @Bean
-+    public MessageConverter converter(){
-+        return new Jackson2JsonMessageConverter();
-+    }
-+
-+    @Bean
-+    public AmqpTemplate createAmqpTemplate(ConnectionFactory connectionFactory){
-+        RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);
-+        rabbitTemplate.setMessageConverter(converter());
-+        return rabbitTemplate;
-+    }
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java	
-@@ -0,0 +1,149 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.bootstrapping;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.*;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import lombok.RequiredArgsConstructor;
-+import org.springframework.boot.CommandLineRunner;
-+import org.springframework.context.annotation.Profile;
-+import org.springframework.stereotype.Component;
-+
-+
-+@Component
-+@RequiredArgsConstructor
-+@Profile("bootstrap")
-+public class PlansBootstrapper implements CommandLineRunner {
-+
-+	private final PlansRepositoryBD plansRepo;
-+
-+	@Override
-+	public void run(final String... args) throws Exception {
-+
-+		if (plansRepo.findByName_Name("Free").isEmpty()) {
-+
-+			final Name name = new Name();
-+			name.setName("Free");
-+
-+			final Description description = new Description();
-+			description.setDescription("Based Plan Free");
-+
-+			final NumberOfMinutes numberOfMinutes = new NumberOfMinutes();
-+			numberOfMinutes.setNumberOfMinutes("1000");
-+
-+			final MaximumNumberOfUsers maximumNumberOfUsers = new MaximumNumberOfUsers();
-+			maximumNumberOfUsers.setMaximumNumberOfUsers(1);
-+
-+			final MusicCollection musicCollection = new MusicCollection();
-+			musicCollection.setMusicCollection(0);
-+
-+			final MusicSuggestion musicSuggestion = new MusicSuggestion();
-+			musicSuggestion.setMusicSuggestion("automatic");
-+
-+			final AnnualFee annualFee = new AnnualFee();
-+			annualFee.setAnnualFee(00.00);
-+
-+			final MonthlyFee monthlyFee = new MonthlyFee();
-+			monthlyFee.setMonthlyFee(00.00);
-+
-+			final Active active = new Active();
-+			active.setActive(true);
-+
-+			final Promoted promoted = new Promoted();
-+			promoted.setPromoted(false);
-+
-+			final Plans plans = new Plans(name , description,numberOfMinutes, maximumNumberOfUsers,musicCollection,musicSuggestion,annualFee,monthlyFee,active,promoted);
-+
-+			plansRepo.save(plans);
-+		}
-+		if (plansRepo.findByName_Name("Silver").isEmpty()) {
-+			final Name name = new Name();
-+			name.setName("Silver");
-+
-+			final Description description = new Description();
-+			description.setDescription("Based Plan Silver");
-+
-+			final NumberOfMinutes numberOfMinutes = new NumberOfMinutes();
-+			numberOfMinutes.setNumberOfMinutes("5000");
-+
-+			final MaximumNumberOfUsers maximumNumberOfUsers = new MaximumNumberOfUsers();
-+			maximumNumberOfUsers.setMaximumNumberOfUsers(3);
-+
-+			final MusicCollection musicCollection = new MusicCollection();
-+			musicCollection.setMusicCollection(10);
-+
-+			final MusicSuggestion musicSuggestion = new MusicSuggestion();
-+			musicSuggestion.setMusicSuggestion("automatic");
-+
-+			final AnnualFee annualFee = new AnnualFee();
-+			annualFee.setAnnualFee(49.90);
-+
-+			final MonthlyFee monthlyFee = new MonthlyFee();
-+			monthlyFee.setMonthlyFee(4.99);
-+
-+			final Active active = new Active();
-+			active.setActive(true);
-+
-+			final Promoted promoted = new Promoted();
-+			promoted.setPromoted(false);
-+
-+			final Plans plans = new Plans(name , description,numberOfMinutes, maximumNumberOfUsers,musicCollection,musicSuggestion,annualFee,monthlyFee,active,promoted);
-+			plansRepo.save(plans);
-+		}
-+		if (plansRepo.findByName_Name("Gold").isEmpty()) {
-+			final Name name = new Name();
-+			name.setName("Gold");
-+
-+			final Description description = new Description();
-+			description.setDescription("Based Plan Gold");
-+
-+			final NumberOfMinutes numberOfMinutes = new NumberOfMinutes();
-+			numberOfMinutes.setNumberOfMinutes("unlimited");
-+
-+			final MaximumNumberOfUsers maximumNumberOfUsers = new MaximumNumberOfUsers();
-+			maximumNumberOfUsers.setMaximumNumberOfUsers(6);
-+
-+			final MusicCollection musicCollection = new MusicCollection();
-+			musicCollection.setMusicCollection(25);
-+
-+			final MusicSuggestion musicSuggestion = new MusicSuggestion();
-+			musicSuggestion.setMusicSuggestion("personalized");
-+
-+			final AnnualFee annualFee = new AnnualFee();
-+			annualFee.setAnnualFee(59.90);
-+
-+			final MonthlyFee monthlyFee = new MonthlyFee();
-+			monthlyFee.setMonthlyFee(5.99);
-+
-+			final Active active = new Active();
-+			active.setActive(true);
-+
-+			final Promoted promoted = new Promoted();
-+			promoted.setPromoted(true);
-+
-+			final Plans plans = new Plans(name , description,numberOfMinutes, maximumNumberOfUsers,musicCollection,musicSuggestion,annualFee,monthlyFee,active,promoted);
-+			plansRepo.save(plans);
-+		}
-+
-+
-+	}
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java	
-@@ -0,0 +1,238 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.exceptions;
-+
-+import lombok.AllArgsConstructor;
-+import lombok.Data;
-+import lombok.NoArgsConstructor;
-+import org.apache.logging.log4j.LogManager;
-+import org.apache.logging.log4j.Logger;
-+import org.hibernate.exception.ConstraintViolationException;
-+import org.springframework.dao.DataIntegrityViolationException;
-+import org.springframework.http.HttpHeaders;
-+import org.springframework.http.HttpStatus;
-+import org.springframework.http.ResponseEntity;
-+import org.springframework.security.access.AccessDeniedException;
-+import org.springframework.web.bind.MethodArgumentNotValidException;
-+import org.springframework.web.bind.annotation.ControllerAdvice;
-+import org.springframework.web.bind.annotation.ExceptionHandler;
-+import org.springframework.web.bind.annotation.ResponseStatus;
-+import org.springframework.web.context.request.WebRequest;
-+import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-+
-+
-+import javax.servlet.http.HttpServletRequest;
-+import javax.validation.ValidationException;
-+import java.util.ArrayList;
-+import java.util.Collection;
-+import java.util.HashMap;
-+import java.util.List;
-+import java.util.Map;
-+
-+
-+
-+/**
-+ * Check https://www.baeldung.com/exception-handling-for-rest-with-spring
-+ * <p>
-+ * Based on https://github.com/Yoh0xFF/java-spring-security-example
-+ *
-+ */
-+@ControllerAdvice
-+public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-+
-+	private final Logger logger = LogManager.getLogger();
-+
-+	@ExceptionHandler(value = { org.hibernate.StaleObjectStateException.class, ConflictException.class })
-+	@ResponseStatus(HttpStatus.CONFLICT)
-+	protected ResponseEntity<Object> handleConflict(final HttpServletRequest request, final Exception ex) {
-+		logger.error("ConflictException {}\n", request.getRequestURI(), ex);
-+
-+		final Map<String, String> details = new HashMap<>();
-+		details.put("message", "Object was updated by another user");
-+		details.put("error", ex.getMessage());
-+
-+		return ResponseEntity.status(HttpStatus.CONFLICT).body(new ApiCallError<>("Conflict", details.entrySet()));
-+	}
-+
-+	@ExceptionHandler({ ConstraintViolationException.class })
-+	@ResponseStatus(HttpStatus.CONFLICT)
-+	protected ResponseEntity<Object> handleConstraintViolation(final HttpServletRequest request,
-+			final ConstraintViolationException ex) {
-+		logger.error("ConstraintViolationException {}\n", request.getRequestURI(), ex);
-+
-+		final Map<String, String> details = new HashMap<>();
-+		details.put("message", "The identity of the object you tried to create is already in use");
-+		details.put("error", ex.getMessage());
-+		details.put("constraint", ex.getConstraintName());
-+		details.put("state", ex.getSQLState());
-+
-+		return ResponseEntity.status(HttpStatus.CONFLICT).body(new ApiCallError<>("Conflict", details.entrySet()));
-+	}
-+
-+	@ExceptionHandler({ DataIntegrityViolationException.class })
-+	@ResponseStatus(HttpStatus.CONFLICT)
-+	protected ResponseEntity<Object> handleDataIntegrityViolation(final HttpServletRequest request,
-+			final DataIntegrityViolationException ex) {
-+		logger.error("DataIntegrityViolationException {}\n", request.getRequestURI(), ex);
-+
-+		final Map<String, String> details = new HashMap<>();
-+		details.put("message", "The identity of the object you tried to create is already in use");
-+		details.put("error", ex.getMessage());
-+
-+		return ResponseEntity.status(HttpStatus.CONFLICT).body(new ApiCallError<>("Conflict", details.entrySet()));
-+	}
-+
-+	@ExceptionHandler({ IllegalArgumentException.class, NumberFormatException.class })
-+	@ResponseStatus(HttpStatus.BAD_REQUEST)
-+	protected ResponseEntity<Object> handleIllegalArgument(final HttpServletRequest request,
-+			final IllegalArgumentException ex) {
-+		logger.error("BadRequestException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.BAD_REQUEST)
-+				.body(new ApiCallError<>("Bad Request", List.of(ex.getMessage())));
-+	}
-+
-+	@ExceptionHandler(NotFoundException.class)
-+	@ResponseStatus(HttpStatus.NOT_FOUND)
-+	public ResponseEntity<ApiCallError<String>> handleNotFoundException(final HttpServletRequest request,
-+			final NotFoundException ex) {
-+		logger.error("NotFoundException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.NOT_FOUND)
-+				.body(new ApiCallError<>("Not found", List.of(ex.getMessage())));
-+	}
-+
-+	@ExceptionHandler(ValidationException.class)
-+	@ResponseStatus(HttpStatus.BAD_REQUEST)
-+	public ResponseEntity<ApiCallError<String>> handleValidationException(final HttpServletRequest request,
-+			final ValidationException ex) {
-+		logger.error("ValidationException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.badRequest()
-+				.body(new ApiCallError<>("Bad Request: Validation Failed", List.of(ex.getMessage())));
-+	}
-+
-+	/*
-+	 * @ExceptionHandler(MissingServletRequestParameterException.class)
-+	 *
-+	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public
-+	 * ResponseEntity<ApiCallError<String>>
-+	 * handleMissingServletRequestParameterException( final HttpServletRequest
-+	 * request, final MissingServletRequestParameterException ex) {
-+	 * logger.error("handleMissingServletRequestParameterException {}\n",
-+	 * request.getRequestURI(), ex);
-+	 *
-+	 * return ResponseEntity.badRequest() .body(new
-+	 * ApiCallError<>("Missing request parameter", List.of(ex.getMessage()))); }
-+	 */
-+
-+	/*
-+	 * @ExceptionHandler(MethodArgumentTypeMismatchException.class)
-+	 *
-+	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public
-+	 * ResponseEntity<ApiCallError<Map.Entry<String, String>>>
-+	 * handleMethodArgumentTypeMismatchException( final HttpServletRequest request,
-+	 * final MethodArgumentTypeMismatchException ex) {
-+	 * logger.error("handleMethodArgumentTypeMismatchException {}\n",
-+	 * request.getRequestURI(), ex);
-+	 *
-+	 * final Map<String, String> details = new HashMap<>(); details.put("paramName",
-+	 * ex.getName()); details.put("paramValue",
-+	 * ofNullable(ex.getValue()).map(Object::toString).orElse(""));
-+	 * details.put("errorMessage", ex.getMessage());
-+	 *
-+	 * return ResponseEntity.badRequest() .body(new
-+	 * ApiCallError<>("Method argument type mismatch", details.entrySet())); }
-+	 */
-+
-+	/**
-+	 * handle validation errors generated by @Valid
-+	 */
-+	@Override
-+	protected ResponseEntity<Object> handleMethodArgumentNotValid(final MethodArgumentNotValidException ex,
-+			final HttpHeaders headers, final HttpStatus status, final WebRequest request) {
-+		logger.error("handleMethodArgumentNotValidException {}\n", request.getDescription(false), ex);
-+		final List<Map<String, String>> details = new ArrayList<>();
-+		ex.getBindingResult().getFieldErrors().forEach(fieldError -> {
-+			final Map<String, String> detail = new HashMap<>();
-+			detail.put("objectName", fieldError.getObjectName());
-+			detail.put("field", fieldError.getField());
-+			detail.put("rejectedValue", "" + fieldError.getRejectedValue());
-+			detail.put("errorMessage", fieldError.getDefaultMessage());
-+			details.add(detail);
-+		});
-+
-+		return ResponseEntity.badRequest().body(new ApiCallError<>("Method argument validation failed", details));
-+	}
-+
-+	/**
-+	 * handle validation errors generated by @Valid
-+	 */
-+	/*
-+	 * @ExceptionHandler(MethodArgumentNotValidException.class)
-+	 *
-+	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public
-+	 * ResponseEntity<ApiCallError<Map<String, String>>>
-+	 * handleMethodArgumentNotValidException( final HttpServletRequest request,
-+	 * final MethodArgumentNotValidException ex) {
-+	 * logger.error("handleMethodArgumentNotValidException {}\n",
-+	 * request.getRequestURI(), ex);
-+	 *
-+	 * final List<Map<String, String>> details = new ArrayList<>();
-+	 * ex.getBindingResult().getFieldErrors().forEach(fieldError -> { final
-+	 * Map<String, String> detail = new HashMap<>(); detail.put("objectName",
-+	 * fieldError.getObjectName()); detail.put("field", fieldError.getField());
-+	 * detail.put("rejectedValue", "" + fieldError.getRejectedValue());
-+	 * detail.put("errorMessage", fieldError.getDefaultMessage());
-+	 * details.add(detail); });
-+	 *
-+	 * return ResponseEntity.badRequest().body(new
-+	 * ApiCallError<>("Method argument validation failed", details)); }
-+	 */
-+	@ExceptionHandler(AccessDeniedException.class)
-+	@ResponseStatus(HttpStatus.FORBIDDEN)
-+	public ResponseEntity<ApiCallError<String>> handleAccessDeniedException(final HttpServletRequest request,
-+			final AccessDeniedException ex) {
-+		logger.error("handleAccessDeniedException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.FORBIDDEN)
-+				.body(new ApiCallError<>("Access denied!", List.of(ex.getMessage())));
-+	}
-+
-+	@ExceptionHandler(Exception.class)
-+	@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
-+	public ResponseEntity<ApiCallError<String>> handleInternalServerError(final HttpServletRequest request,
-+			final Exception ex) {
-+		logger.error("handleInternalServerError {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
-+				.body(new ApiCallError<>("Internal server error", List.of(ex.getMessage())));
-+	}
-+
-+	@Data
-+	@NoArgsConstructor
-+	@AllArgsConstructor
-+	public static class ApiCallError<T> {
-+
-+		private String message;
-+		private Collection<T> details;
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java	
-@@ -0,0 +1,228 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.configuration;
-+
-+import com.nimbusds.jose.jwk.JWK;
-+import com.nimbusds.jose.jwk.JWKSet;
-+import com.nimbusds.jose.jwk.RSAKey;
-+import com.nimbusds.jose.jwk.source.ImmutableJWKSet;
-+import com.nimbusds.jose.jwk.source.JWKSource;
-+import com.nimbusds.jose.proc.SecurityContext;
-+import lombok.RequiredArgsConstructor;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.http.HttpMethod;
-+import org.springframework.security.authentication.AuthenticationManager;
-+import org.springframework.security.config.Customizer;
-+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
-+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
-+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
-+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
-+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
-+import org.springframework.security.config.http.SessionCreationPolicy;
-+import org.springframework.security.core.userdetails.UsernameNotFoundException;
-+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
-+import org.springframework.security.crypto.password.PasswordEncoder;
-+import org.springframework.security.oauth2.jwt.JwtDecoder;
-+import org.springframework.security.oauth2.jwt.JwtEncoder;
-+import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;
-+import org.springframework.security.oauth2.jwt.NimbusJwtEncoder;
-+import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;
-+import org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;
-+import org.springframework.security.oauth2.server.resource.web.BearerTokenAuthenticationEntryPoint;
-+import org.springframework.security.oauth2.server.resource.web.access.BearerTokenAccessDeniedHandler;
-+import org.springframework.web.cors.CorsConfiguration;
-+import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
-+import org.springframework.web.filter.CorsFilter;
-+
-+import java.security.interfaces.RSAPrivateKey;
-+import java.security.interfaces.RSAPublicKey;
-+
-+import static java.lang.String.format;
-+
-+/**
-+ * Check https://www.baeldung.com/security-spring and
-+ * https://www.toptal.com/spring/spring-security-tutorial
-+ * <p>
-+ * Based on https://github.com/Yoh0xFF/java-spring-security-example/
-+ *
-+ * @author pagsousa
-+ *
-+ */
-+@EnableWebSecurity
-+@EnableGlobalMethodSecurity(securedEnabled = true, jsr250Enabled = true, prePostEnabled = true)
-+@RequiredArgsConstructor
-+public class SecurityConfig extends WebSecurityConfigurerAdapter {
-+
-+//	private final UserRepository userRepo;
-+
-+	@Value("${jwt.public.key}")
-+	private RSAPublicKey rsaPublicKey;
-+
-+	@Value("${jwt.private.key}")
-+	private RSAPrivateKey rsaPrivateKey;
-+
-+	@Value("${springdoc.api-docs.path}")
-+	private String restApiDocPath;
-+
-+	@Value("${springdoc.swagger-ui.path}")
-+	private String swaggerPath;
-+
-+//	@Override
-+//	protected void configure(final AuthenticationManagerBuilder auth) throws Exception {
-+//		auth.userDetailsService(username -> userRepo.findByUsername(username)
-+//				.orElseThrow(() -> new UsernameNotFoundException(format("User: %s, not found", username))));
-+//	}
-+
-+
-+	@Override
-+	protected void configure(HttpSecurity http) throws Exception {
-+		// Enable CORS and disable CSRF
-+		http = http.cors().and().csrf().disable();
-+
-+		// Set session management to stateless
-+		http = http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and();
-+
-+		// Set unauthorized requests exception handler
-+		http = http.exceptionHandling(
-+				exceptions -> exceptions.authenticationEntryPoint(new BearerTokenAuthenticationEntryPoint())
-+						.accessDeniedHandler(new BearerTokenAccessDeniedHandler()));
-+
-+		// Set permissions on endpoints
-+		http.authorizeRequests()
-+				// Swagger endpoints must be publicly accessible
-+				.antMatchers("/").permitAll().antMatchers(format("%s/**", restApiDocPath)).permitAll()
-+				.antMatchers(format("%s/**", swaggerPath)).permitAll()
-+				.antMatchers("/api-docs/**").permitAll()
-+				.antMatchers("/swagger-ui/**").permitAll()
-+				.antMatchers("/h2/**").permitAll();
-+
-+		// Testing phase //TODO add permissions
-+		// Set permissions on endpoints
-+		http.authorizeRequests()
-+				.antMatchers("/**").permitAll()
-+				.anyRequest().authenticated()
-+				// Set up oauth2 resource server
-+				.and().httpBasic(Customizer.withDefaults()).oauth2ResourceServer().jwt();
-+
-+//
-+//				// Our public endpoints
-+//				http.authorizeRequests()
-+//
-+//						//all public endpoints
-+//						.antMatchers("/api/public/**").permitAll()
-+//
-+//						// Plans management
-+//						.antMatchers(HttpMethod.GET,"/api/plans/**").permitAll()
-+//
-+//						// get a device image management
-+//						.antMatchers(HttpMethod.GET, "/api/device/photo/**").permitAll()
-+//
-+//						.antMatchers(HttpMethod.GET,"/api/subscriptions/list").hasRole(Role.User_Admin)
-+//						.antMatchers(HttpMethod.POST,"/api/subscriptions/create/").permitAll()
-+//						.antMatchers(HttpMethod.GET,"/api/subscriptions/").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/renew").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/change/{name}").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/change/{actualPlan}/{newPlan}").hasRole(Role.Marketing_Director)
-+//						.antMatchers("/api/public/subscriptions/**").permitAll()
-+//
-+//						//private endpoints
-+//
-+//						// device management
-+//						.antMatchers("/api/device/**").hasRole(Role.Subscriber)
-+//
-+//						//plans management
-+//						.antMatchers(HttpMethod.POST,"/api/plans").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/update/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/updateMoney/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/deactivate/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/promote/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.GET,"/api/plans/history/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.DELETE,"/api/plans/**").hasRole(Role.Marketing_Director)
-+//
-+//						//Dashboard Endpoints management
-+//						.antMatchers(HttpMethod.GET,"/api/dashboard/**").hasRole(Role.Project_Manager)
-+//						.antMatchers(HttpMethod.GET,"/api/dashboard/revenuePlan").hasRole(Role.Financial_director)
-+//						.antMatchers(HttpMethod.GET,"/api/dashboard/currentRevenue").hasRole(Role.Financial_director)
-+//
-+//						//.antMatchers("/api/admin/user/**").hasRole(Role.User_Admin) // user management no
-+//						.antMatchers("api/user/photo/**").hasRole(Role.Subscriber)// photo for user upload and see it
-+//
-+//						.anyRequest().authenticated()
-+//
-+//						.and().httpBasic(Customizer.withDefaults()).oauth2ResourceServer().jwt();
-+//				http.headers().frameOptions().sameOrigin().and().authorizeRequests();
-+
-+	}
-+
-+	// Used by JwtAuthenticationProvider to generate JWT tokens
-+	@Bean
-+	public JwtEncoder jwtEncoder() {
-+		final JWK jwk = new RSAKey.Builder(this.rsaPublicKey).privateKey(this.rsaPrivateKey).build();
-+		final JWKSource<SecurityContext> jwks = new ImmutableJWKSet<>(new JWKSet(jwk));
-+		return new NimbusJwtEncoder(jwks);
-+	}
-+
-+	// Used by JwtAuthenticationProvider to decode and validate JWT tokens
-+	@Bean
-+	public JwtDecoder jwtDecoder() {
-+		return NimbusJwtDecoder.withPublicKey(this.rsaPublicKey).build();
-+	}
-+
-+	// Extract authorities from the roles claim
-+	@Bean
-+	public JwtAuthenticationConverter jwtAuthenticationConverter() {
-+		final JwtGrantedAuthoritiesConverter jwtGrantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();
-+		jwtGrantedAuthoritiesConverter.setAuthoritiesClaimName("roles");
-+		jwtGrantedAuthoritiesConverter.setAuthorityPrefix("ROLE_");
-+
-+		final JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();
-+		jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(jwtGrantedAuthoritiesConverter);
-+		return jwtAuthenticationConverter;
-+	}
-+
-+	// Set password encoding schema
-+	@Bean
-+	public PasswordEncoder passwordEncoder() {
-+		return new BCryptPasswordEncoder();
-+	}
-+
-+	// Used by spring security if CORS is enabled.
-+	@Bean
-+	public CorsFilter corsFilter() {
-+		final UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
-+		final CorsConfiguration config = new CorsConfiguration();
-+		config.setAllowCredentials(true);
-+		config.addAllowedOrigin("*");
-+		config.addAllowedHeader("*");
-+		config.addAllowedMethod("*");
-+		source.registerCorsConfiguration("/**", config);
-+		return new CorsFilter(source);
-+	}
-+
-+//	// Expose authentication manager bean
-+//	@Override
-+//	@Bean
-+//	public AuthenticationManager authenticationManagerBean() throws Exception {
-+//		return super.authenticationManagerBean();
-+//	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java	
-@@ -0,0 +1,47 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.configuration;
-+
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.data.domain.AuditorAware;
-+import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-+import org.springframework.security.core.Authentication;
-+import org.springframework.security.core.context.SecurityContext;
-+import org.springframework.security.core.context.SecurityContextHolder;
-+import org.springframework.transaction.annotation.EnableTransactionManagement;
-+
-+import java.util.Optional;
-+
-+@Configuration
-+@EnableJpaAuditing(auditorAwareRef = "auditorProvider")
-+@EnableTransactionManagement
-+public class JpaConfig {
-+
-+	@Bean("auditorProvider")
-+	public AuditorAware<String> auditorProvider() {
-+		// TODO for public anonymous access, it should not be "SYSTEM" but "PUBLIC"
-+
-+
-+		return () -> Optional.ofNullable(SecurityContextHolder.getContext()).map(SecurityContext::getAuthentication)
-+				.map(Authentication::getName).or(() -> Optional.of("SYSTEM"));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java	
-@@ -0,0 +1,52 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.configuration;
-+
-+import com.example.psoft_22_23_project.filestoragemanagement.service.FileStorageProperties;
-+import io.swagger.v3.oas.models.OpenAPI;
-+import io.swagger.v3.oas.models.info.Contact;
-+import io.swagger.v3.oas.models.info.Info;
-+import io.swagger.v3.oas.models.info.License;
-+import org.springframework.boot.context.properties.EnableConfigurationProperties;
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.web.filter.ShallowEtagHeaderFilter;
-+
-+@Configuration
-+@EnableConfigurationProperties({ FileStorageProperties.class })
-+public class ApiConfig {
-+
-+
-+
-+	@Bean
-+	public ShallowEtagHeaderFilter shallowEtagHeaderFilter() {
-+		return new ShallowEtagHeaderFilter();
-+	}
-+
-+
-+
-+	@Bean
-+	public OpenAPI openApi() {
-+		return new OpenAPI().info(new Info().title("Music API").description("Project API").version("v1.0")
-+				.contact(new Contact().name("ISEP").email("grupo1@isep.ipp.pt")).termsOfService("TOC")
-+				.license(new License().name("MIT").url("#")));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java	
-@@ -0,0 +1,27 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.*;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Size;
-+
-+
-+@Embeddable
-+@Data
-+public class Name {
-+        @Column(name = "Name", unique = true)
-+        @NotNull
-+        @Size(min = 1)
-+        private String name;
-+
-+        public void setName(String name) {
-+                if (name == null || name.isBlank()) {
-+                        throw new IllegalArgumentException("'name' is a mandatory attribute of Plan");
-+                }
-+                this.name = name;
-+        }
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java	
-@@ -0,0 +1,45 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import org.springframework.lang.Nullable;
-+
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Pattern;
-+import javax.validation.constraints.Size;
-+
-+@Data
-+public class PlanDTO {
-+
-+
-+    private String version;
-+    @Size(min = 1)
-+    @NotNull
-+    private String name;
-+    @Size(min = 1)
-+    @NotNull
-+    private String description;
-+    @Size(min = 1)
-+    @NotNull
-+    private String numberOfMinutes;
-+    @Pattern(regexp = "(automatic|personalized)")
-+    @NotNull
-+    private String musicSuggestion;
-+    @Min(0)
-+    @NotNull
-+    private String maximumNumberOfUsers;
-+    @Min(0)
-+    @NotNull
-+    private String musicCollection;
-+    @Min(0)
-+    @NotNull
-+    private String annualFee;
-+    @Min(0)
-+    @NotNull
-+    private String monthlyFee;
-+    @Nullable
-+    private String active;
-+    @Nullable
-+    private String promoted;
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java	
-@@ -0,0 +1,17 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+
-+@Embeddable
-+@Data
-+public class Deleted {
-+    @Column(name = "Is_Deleted")
-+    private boolean deleted = Boolean.FALSE;
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java	
-@@ -0,0 +1,17 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+@Embeddable
-+@Data
-+public class Active {
-+    @Column(name = "Is_Active")
-+    private Boolean active;
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java	
-@@ -0,0 +1,168 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.Setter;
-+import org.hibernate.StaleObjectStateException;
-+import org.hibernate.annotations.SQLDelete;
-+import org.hibernate.annotations.Where;
-+import org.hibernate.envers.Audited;
-+
-+import javax.persistence.*;
-+import java.util.ArrayList;
-+import java.util.List;
-+
-+
-+@Entity
-+@Table(name = "Plans")
-+@SQLDelete(sql = "UPDATE Plans SET Is_Deleted = true WHERE id=?")
-+@Where(clause = "Is_Deleted=false")
-+@Getter
-+public class Plans {
-+
-+    public Plans(Name name,
-+                 Description description,
-+                 NumberOfMinutes numberOfMinutes,
-+                 MaximumNumberOfUsers maximumNumberOfUsers,
-+                 MusicCollection musicCollection,
-+                 MusicSuggestion musicSuggestion,
-+                 AnnualFee annualFee,
-+                 MonthlyFee monthlyFee,
-+                 Active active,
-+                 Promoted promoted) {
-+        this.name = name;
-+        this.description= description;
-+        this.numberOfMinutes = numberOfMinutes;
-+        this.maximumNumberOfUsers = maximumNumberOfUsers;
-+        this.musicCollection = musicCollection;
-+        this.musicSuggestion = musicSuggestion;
-+        this.annualFee = annualFee;
-+        this.monthlyFee = monthlyFee;
-+        this.active = active;
-+        this.promoted = promoted;
-+        this.deleted = new Deleted();
-+        FeeRevision feeRevision1 = new FeeRevision(annualFee.getAnnualFee(),monthlyFee.getMonthlyFee());
-+        feeRevisions.add(feeRevision1);
-+    }
-+
-+    protected  Plans(){}
-+
-+    @Id
-+    @GeneratedValue(strategy = GenerationType.IDENTITY)
-+    private Long id;
-+
-+    @Version
-+    private long version;
-+    @Embedded
-+    private Name name;
-+    @Embedded
-+    private Description description;
-+    @Embedded
-+    private NumberOfMinutes numberOfMinutes;
-+    @Embedded
-+    private MaximumNumberOfUsers maximumNumberOfUsers;
-+    @Embedded
-+    private MusicCollection musicCollection;
-+    @Embedded
-+    private MusicSuggestion musicSuggestion;
-+    @Embedded
-+    private AnnualFee annualFee;
-+    @Embedded
-+    private MonthlyFee monthlyFee ;
-+    @Embedded
-+    private Active active;
-+    @Embedded
-+    private Promoted promoted;
-+    @Embedded
-+    private Deleted deleted;
-+
-+
-+    @ElementCollection
-+    private List<FeeRevision> feeRevisions = new ArrayList<>();
-+
-+
-+//@OneToMany(mappedBy = "plan", cascade = CascadeType.ALL, orphanRemoval = true)
-+// private List<Subscriptions> subscriptions = new ArrayList<>();
-+
-+
-+    public void updateData(long desiredVersion, String description,
-+                           Integer maximumNumberOfUsers,
-+                           String numberOfMinutes , Integer musicCollections,
-+                           String musicSuggestions, Boolean active, Boolean promoted) {
-+
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+        if(description != null){
-+            this.description.setDescription(description);
-+        }
-+
-+        if(maximumNumberOfUsers != null){
-+            this.maximumNumberOfUsers.setMaximumNumberOfUsers(maximumNumberOfUsers);
-+        }
-+
-+        if(musicCollections != null){
-+            this.musicCollection.setMusicCollection(musicCollections);
-+        }
-+
-+        if(numberOfMinutes != null){
-+            this.numberOfMinutes.setNumberOfMinutes(numberOfMinutes);
-+        }
-+
-+        if(musicSuggestions != null){
-+            this.musicSuggestion.setMusicSuggestion(musicSuggestions);
-+        }
-+        if(active != null){
-+            this.active.setActive(active);
-+        }
-+        if(promoted != null){
-+            this.promoted.setPromoted(promoted);
-+        }
-+
-+
-+    }
-+
-+
-+    public void moneyData(long desiredVersion, Double annualFee, Double monthlyFee, String name) {
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+        if (annualFee != null || monthlyFee != null){
-+            FeeRevision feeRevision1 = new FeeRevision(annualFee,monthlyFee,name);
-+            feeRevisions.add(feeRevision1);
-+
-+        }
-+        if(annualFee != null){
-+
-+            this.annualFee.setAnnualFee(annualFee);
-+        }
-+
-+        if(monthlyFee != null){
-+
-+            this.monthlyFee.setMonthlyFee(monthlyFee);
-+        }
-+
-+    }
-+
-+    public void deactivate(final long desiredVersion) {
-+        // check current version
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+
-+        this.active.setActive(false);
-+    }
-+
-+    public void promote(final long desiredVersion) {
-+        // check current version
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+
-+        this.promoted.setPromoted(true);
-+    }
-+
-+
-+}
-+
-+
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java	
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Size;
-+
-+@Embeddable
-+@Data
-+public class Description {
-+    @Column(name = "Description")
-+    @NotNull
-+    @Size(min = 1)
-+    private String description;
-+
-+    public void setDescription(String description) {
-+        if (description == null || description.isBlank()) {
-+            throw new IllegalArgumentException("Description is a mandatory attribute of Plan");
-+        }
-+        this.description = description;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java	
-@@ -0,0 +1,29 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class MonthlyFee {
-+    @Column(name = "Monthly_Fee")
-+    @NotNull
-+    @Min(0)
-+    private double monthlyFee;
-+
-+    public void setMonthlyFee(double monthlyFee) {
-+        if (monthlyFee < 0) {
-+            throw new IllegalArgumentException("Monthly Fee must be positive");
-+        }
-+        this.monthlyFee = monthlyFee;
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java	
-@@ -0,0 +1,27 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class AnnualFee {
-+    @Column(name = "Annual_Fee")
-+    @NotNull
-+    @Min(0)
-+    private double annualFee;
-+
-+    public void setAnnualFee(double annualFee) {
-+        if (annualFee < 0) {
-+            throw new IllegalArgumentException("Annual_Fee must be positive");
-+        }
-+        this.annualFee = annualFee;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java	
-@@ -0,0 +1,21 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class Promoted {
-+    @Column(name = "Is_Promoted")
-+    @NotNull
-+    private Boolean promoted;
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java	
-@@ -0,0 +1,47 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Size;
-+import java.util.regex.Matcher;
-+import java.util.regex.Pattern;
-+
-+@Embeddable
-+@Data
-+public class NumberOfMinutes {
-+    @Column(name = "Number_Of_Minutes")
-+    @NotNull
-+    @Size(min = 1)
-+    private String numberOfMinutes;
-+
-+    public void setNumberOfMinutes(String numberOfMinutes) {
-+        if (numberOfMinutes == null || numberOfMinutes.isBlank()) {
-+            throw new IllegalArgumentException("Number Of Minutes is a mandatory attribute of Plan");
-+        }
-+        if (!isValidInput(numberOfMinutes)){
-+            throw new IllegalArgumentException("Number Of Minutes can only be a positive number or 'unlimited'");
-+        }
-+        this.numberOfMinutes = numberOfMinutes;
-+    }
-+
-+    public static boolean isValidInput(String input) {
-+        // Regex pattern for matching "unlimited" or a positive number
-+        String pattern = "^unlimited$|^[1-9]\\d*$";
-+
-+        // Create a pattern object
-+        Pattern regex = Pattern.compile(pattern);
-+
-+        // Create a matcher object
-+        Matcher matcher = regex.matcher(input);
-+
-+        // Check if the input matches the pattern
-+        return matcher.matches();
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java	
-@@ -0,0 +1,30 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Pattern;
-+
-+
-+@Embeddable
-+@Data
-+public class MusicSuggestion {
-+    @Column(name = "Music_Suggestion")
-+    @NotNull
-+    @Pattern(regexp = "(automatic|personalized)")
-+    private String musicSuggestion;
-+
-+    public void setMusicSuggestion(String musicSuggestion) {
-+        if (musicSuggestion.equals("automatic") || musicSuggestion.equals("personalized")){
-+            this.musicSuggestion = musicSuggestion;
-+
-+        }else throw new IllegalArgumentException("Music Suggestion can only be 'personalized' or 'automatic' ");
-+
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java	
-@@ -0,0 +1,28 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class MusicCollection {
-+    @Column(name = "Music_Collection")
-+    @NotNull
-+    @Min(0)
-+    private Integer musicCollection;
-+
-+    public void setMusicCollection(Integer musicCollection) {
-+        if (musicCollection == null || musicCollection < 0) {
-+            throw new IllegalArgumentException("Music Collection number must be positive");
-+        }
-+        this.musicCollection = musicCollection;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java	
-@@ -0,0 +1,37 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+
-+import javax.persistence.Embeddable;
-+import java.time.LocalDate;
-+
-+
-+@Data
-+@Embeddable
-+public class FeeRevision {
-+
-+    private Double annualFee;
-+    private Double monthlyFee;
-+    private String user;
-+    private String time;
-+
-+
-+    public FeeRevision(Double annualFee,Double monthlyFee, String user) {
-+        this.annualFee = annualFee;
-+        this.monthlyFee = monthlyFee;
-+        this.user = user;
-+        this.time = LocalDate.now().toString();
-+
-+    }
-+
-+    public FeeRevision(Double annualFee,Double monthlyFee) {
-+        this.annualFee = annualFee;
-+        this.monthlyFee = monthlyFee;
-+        this.user = "Created With";
-+        this.time = LocalDate.now().toString();
-+    }
-+
-+    public FeeRevision() {
-+
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java	
-@@ -0,0 +1,27 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class MaximumNumberOfUsers {
-+    @Column(name = "Maximum_Number_Of_Users")
-+    @NotNull
-+    @Min(0)
-+    private Integer maximumNumberOfUsers;
-+
-+    public void setMaximumNumberOfUsers(Integer maximumNumberOfUsers) {
-+        if (maximumNumberOfUsers == null || maximumNumberOfUsers < 0) {
-+            throw new IllegalArgumentException("Maximum Number Of Users must be positive");
-+        }
-+        this.maximumNumberOfUsers = maximumNumberOfUsers;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java	
-@@ -0,0 +1,14 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Getter;
-+import lombok.Setter;
-+
-+@Getter
-+@Setter
-+public class PromotionResult {
-+
-+    private Plans newPromotedPlan;
-+    private Plans previousPromotedPlan;
-+
-+}
-+
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java	
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.consumer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.PlansService;
-+import lombok.RequiredArgsConstructor;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.annotation.RabbitListener;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class UpdatePlanJsonConsumer {
-+
-+    private static final Logger logger = LoggerFactory.getLogger(UpdatePlanJsonConsumer.class);
-+
-+    private final PlansService plansService;
-+
-+    @RabbitListener(queues = "#{updatePlanQueue.name}")
-+    public void receiveMessage(PlanDTO obj) {
-+        plansService.saveUpdatedPlanRabbit(obj);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java	
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.consumer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.PlansService;
-+import lombok.RequiredArgsConstructor;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.annotation.RabbitListener;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class DeletePlanJsonConsumer {
-+
-+    private static final Logger logger = LoggerFactory.getLogger(DeletePlanJsonConsumer.class);
-+
-+    private final PlansService plansService;
-+
-+    @RabbitListener(queues = "#{deletePlanQueue.name}")
-+    public void receiveMessage(PlanDTO obj) {
-+        plansService.saveDeletedPlanRabbit(obj);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java	
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.consumer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.PlansService;
-+import lombok.RequiredArgsConstructor;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.annotation.RabbitListener;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class CreatePlanJsonConsumer {
-+
-+    private static final Logger logger = LoggerFactory.getLogger(CreatePlanJsonConsumer.class);
-+
-+    private final PlansService plansService;
-+
-+    @RabbitListener(queues = "#{createPlanQueue.name}")
-+    public void receiveMessage(PlanDTO obj) {
-+        plansService.saveCreatedPlanRabbit(obj);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java	
-@@ -0,0 +1,32 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.services;
-+
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+
-+public interface PlansService {
-+
-+    void saveCreatedPlanRabbit(PlanDTO obj);
-+	void saveUpdatedPlanRabbit(PlanDTO obj);
-+	void saveDeletedPlanRabbit(PlanDTO obj);
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java	
-@@ -0,0 +1,33 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.producer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+public class UpdatePlanJsonProducer {
-+
-+    @Value("${rabbitmp.exchange.plan.update}")
-+    private String updatePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.update}")
-+    private String updatePlanRoutingKey;
-+
-+    private static final Logger logger = LoggerFactory.getLogger(UpdatePlanJsonProducer.class);
-+
-+    private RabbitTemplate rabbitTemplate;
-+
-+    public UpdatePlanJsonProducer(RabbitTemplate rabbitTemplate) {
-+        this.rabbitTemplate = rabbitTemplate;
-+    }
-+
-+    public void sendMessage(PlanDTO message) {
-+        logger.info(String.format("Json message sent -> %s", message));
-+        rabbitTemplate.convertAndSend(updatePlanExchange, updatePlanRoutingKey, message);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java	
-@@ -0,0 +1,33 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.producer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+public class DeletePlanJsonProducer {
-+
-+    @Value("${rabbitmp.exchange.plan.delete}")
-+    private String deletePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.delete}")
-+    private String deletePlanRoutingKey;
-+
-+    private static final Logger logger = LoggerFactory.getLogger(DeletePlanJsonProducer.class);
-+
-+    private RabbitTemplate rabbitTemplate;
-+
-+    public DeletePlanJsonProducer(RabbitTemplate rabbitTemplate) {
-+        this.rabbitTemplate = rabbitTemplate;
-+    }
-+
-+    public void sendMessage(PlanDTO message) {
-+        logger.info(String.format("Json message sent -> %s", message));
-+        rabbitTemplate.convertAndSend(deletePlanExchange, deletePlanRoutingKey, message);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java	
-@@ -0,0 +1,33 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.producer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+public class CreatePlanJsonProducer {
-+
-+    @Value("${rabbitmp.exchange.plan.create}")
-+    private String createPlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.create}")
-+    private String createPlanRoutingKey;
-+
-+    private static final Logger logger = LoggerFactory.getLogger(CreatePlanJsonProducer.class);
-+
-+    private RabbitTemplate rabbitTemplate;
-+
-+    public CreatePlanJsonProducer(RabbitTemplate rabbitTemplate) {
-+        this.rabbitTemplate = rabbitTemplate;
-+    }
-+
-+    public void sendMessage(PlanDTO message) {
-+        logger.info(String.format("Json message sent -> %s", message));
-+        rabbitTemplate.convertAndSend(createPlanExchange, createPlanRoutingKey, message);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java	
-@@ -0,0 +1,46 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.repositories;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.springframework.cache.annotation.CacheConfig;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.data.jpa.repository.Modifying;
-+import org.springframework.data.jpa.repository.Query;
-+import org.springframework.data.repository.CrudRepository;
-+import org.springframework.data.repository.query.Param;
-+import org.springframework.stereotype.Repository;
-+
-+import javax.validation.constraints.NotNull;
-+import java.util.List;
-+import java.util.Optional;
-+@Repository
-+@Configuration
-+@CacheConfig(cacheNames = "plans")
-+public interface PlansRepositoryBD extends CrudRepository<Plans, Long> {
-+
-+	Optional<Plans> findByName_Name(@NotNull String name);
-+
-+	Plans findByActive_ActiveAndName_Name(@NotNull boolean active, @NotNull String name_name);
-+	List<Plans> findByActive_Active(@NotNull boolean active);
-+	Optional<Plans> findByPromoted_Promoted(@NotNull boolean promoted);
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java	
-@@ -0,0 +1,57 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.services;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.mapstruct.Mapper;
-+import org.mapstruct.Mapping;
-+import org.mapstruct.MappingTarget;
-+
-+@Mapper(componentModel = "spring")
-+public abstract class CreatePlansMapper {
-+
-+	@Mapping(source = "request.name", target = "name.name")
-+	@Mapping(source = "request.description", target = "description.description")
-+	@Mapping(source = "request.numberOfMinutes", target = "numberOfMinutes.numberOfMinutes")
-+	@Mapping(source = "request.maximumNumberOfUsers", target = "maximumNumberOfUsers.maximumNumberOfUsers")
-+	@Mapping(source = "request.musicCollection", target = "musicCollection.musicCollection")
-+	@Mapping(source = "request.musicSuggestion", target = "musicSuggestion.musicSuggestion")
-+	@Mapping(source = "request.annualFee", target = "annualFee.annualFee")
-+	@Mapping(source = "request.monthlyFee", target = "monthlyFee.monthlyFee")
-+	@Mapping(source = "request.active", target = "active.active")
-+	@Mapping(source = "request.promoted", target = "promoted.promoted")
-+	public abstract Plans createPlanFromDTO(PlanDTO request);
-+
-+	@Mapping(source = "request.name.name", target = "name")
-+	@Mapping(source = "request.version", target = "version")
-+	@Mapping(source = "request.description.description", target = "description")
-+	@Mapping(source = "request.numberOfMinutes.numberOfMinutes", target = "numberOfMinutes")
-+	@Mapping(source = "request.maximumNumberOfUsers.maximumNumberOfUsers", target = "maximumNumberOfUsers")
-+	@Mapping(source = "request.musicCollection.musicCollection", target = "musicCollection")
-+	@Mapping(source = "request.musicSuggestion.musicSuggestion", target = "musicSuggestion")
-+	@Mapping(source = "request.annualFee.annualFee", target = "annualFee")
-+	@Mapping(source = "request.monthlyFee.monthlyFee", target = "monthlyFee")
-+	@Mapping(source = "request.active.active", target = "active")
-+	@Mapping(source = "request.promoted.promoted", target = "promoted")
-+	public abstract PlanDTO createDTOFromPlan(Plans request);
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java
-new file mode 100644
---- /dev/null	
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java	
-@@ -0,0 +1,116 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.services;
-+
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.*;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.consumer.CreatePlanJsonConsumer;
-+import com.example.psoft_22_23_project.plansmanagement.services.producer.CreatePlanJsonProducer;
-+import com.example.psoft_22_23_project.plansmanagement.services.producer.DeletePlanJsonProducer;
-+import com.example.psoft_22_23_project.plansmanagement.services.producer.UpdatePlanJsonProducer;
-+import com.fasterxml.jackson.core.type.TypeReference;
-+import com.fasterxml.jackson.databind.ObjectMapper;
-+import lombok.RequiredArgsConstructor;
-+
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class PlansServiceImpl implements PlansService {
-+
-+	private final PlansRepositoryBD plansRepository;
-+
-+	private final CreatePlansMapper createPlansMapper;
-+	private static final Logger logger = LoggerFactory.getLogger(PlansServiceImpl.class);
-+
-+	private final CreatePlanJsonProducer createPlanJsonProducer;
-+
-+	private final UpdatePlanJsonProducer updatePlanJsonProducer;
-+
-+	private final DeletePlanJsonProducer deletePlanJsonProducer;
-+
-+	@Override
-+	public void saveCreatedPlanRabbit(PlanDTO dto) {
-+
-+		Plans obj = createPlansMapper.createPlanFromDTO(dto);
-+
-+		// Check if the plan already exists in the local database
-+		if (plansRepository.findByName_Name(obj.getName().getName()).isEmpty()) {
-+			// Plan doesn't exist locally, so create it
-+			plansRepository.save(obj);
-+			logger.info("Plan added to the local database.");
-+		} else {
-+			logger.warn("Plan already exists in the local database. No action taken.");
-+		}
-+	}
-+
-+	@Override
-+	public void saveUpdatedPlanRabbit(PlanDTO dto) {
-+
-+		Plans obj = createPlansMapper.createPlanFromDTO(dto);
-+
-+		try {
-+			Plans existingPlan = plansRepository.findByName_Name(obj.getName().getName()).orElse(null);
-+
-+			if (existingPlan != null && existingPlan.getVersion() != Long.parseLong(dto.getVersion())) {
-+
-+				existingPlan.updateData(existingPlan.getVersion(), obj.getDescription().getDescription(),
-+						obj.getMaximumNumberOfUsers().getMaximumNumberOfUsers(), obj.getNumberOfMinutes().getNumberOfMinutes(),
-+						obj.getMusicCollection().getMusicCollection(), obj.getMusicSuggestion().getMusicSuggestion(),
-+						obj.getActive().getActive(), obj.getPromoted().getPromoted());
-+
-+				plansRepository.save(existingPlan);
-+				logger.info("Plan updated to the local database.");
-+			} else {
-+				logger.warn("Received plan has an older version or already updated in the local database. No action taken.");
-+			}
-+		} catch (Exception e) {
-+			logger.error("Error processing received message: {}", e.getMessage(), e);
-+			// Handle the exception as needed, possibly retry or log an error.
-+		}
-+	}
-+
-+	@Override
-+	public void saveDeletedPlanRabbit(PlanDTO dto) {
-+
-+		Plans obj = createPlansMapper.createPlanFromDTO(dto);
-+
-+		try {
-+			Plans existingPlan = plansRepository.findByName_Name(obj.getName().getName()).orElse(null);
-+
-+			if (existingPlan != null && existingPlan.getVersion() != Long.parseLong(dto.getVersion())) {
-+
-+				existingPlan.deactivate(existingPlan.getVersion());
-+
-+				plansRepository.save(existingPlan);
-+				logger.info("Plan deleted in the local database.");
-+			} else {
-+				logger.warn("Received plan has an older version or already deleted in the local database. No action taken.");
-+			}
-+		} catch (Exception e) {
-+			logger.error("Error processing received message: {}", e.getMessage(), e);
-+			// Handle the exception as needed, possibly retry or log an error.
-+		}
-+	}
-+}
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Merge_at_26_12_2023_18_33_[Changes]" date="1703615649303" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_26_12_2023_18_33_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Merge at 26/12/2023 18:33 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,17 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanQueryServiceMain(1)\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"1796000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/.idea/workspace.xml	(date 1703694037814)
-@@ -217,4 +217,4 @@
-     <MESSAGE value="docs" />
-     <option name="LAST_COMMIT_MESSAGE" value="docs" />
-   </component>
--</project>
-\ No newline at end of file
-+</project>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_27_12_2023_16_41_[Changes]" date="1703695317337" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 27/12/2023 16:41 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]" date="1703859964887" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 29/12/2023 14:25 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="plan-bootstrap-service/src/main/resources/assets/keep-calm-and-love-jpa.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]/keep-calm-and-love-jpa.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,52 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"jdk.selected.JAVA_MODULE\": \"corretto-18\",\r\n    \"last_opened_file_path\": \"C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"h2\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanBootstrapApplication\">\r\n    <configuration name=\"PlanBootstrapApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-bootstrap-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.planbootstrap.PlanBootstrapApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"2121000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703608858516</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703608858516</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"sprint3\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 9bb33556609c8903983f99bc9f870f3ea16f6966)
-+++ b/.idea/workspace.xml	(date 1703695146058)
-@@ -4,13 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="docs">
--      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
--    </list>
-+    <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="initial commit" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -217,7 +211,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1703608858516</updated>
-     </task>
--    <option name="localTasksCounter" value="9" />
-+    <task id="LOCAL-00009" summary="initial commit">
-+      <option name="closed" value="true" />
-+      <created>1703695130387</created>
-+      <option name="number" value="00009" />
-+      <option name="presentableId" value="LOCAL-00009" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1703695130387</updated>
-+    </task>
-+    <option name="localTasksCounter" value="10" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -252,6 +254,7 @@
-     <MESSAGE value="plan-query-service update" />
-     <MESSAGE value="user-command-service update" />
-     <MESSAGE value="docs" />
--    <option name="LAST_COMMIT_MESSAGE" value="docs" />
-+    <MESSAGE value="initial commit" />
-+    <option name="LAST_COMMIT_MESSAGE" value="initial commit" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,34 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanCommandServiceMain\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"2121000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703608858516</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703608858516</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision bd720c3853c0294a3a0d1d1183aee1de9454e3af)
-+++ b/.idea/workspace.xml	(date 1703615727750)
-@@ -203,7 +203,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1703608858516</updated>
-     </task>
--    <option name="localTasksCounter" value="9" />
-+    <task id="LOCAL-00009" summary="docs">
-+      <option name="closed" value="true" />
-+      <created>1703615702768</created>
-+      <option name="number" value="00009" />
-+      <option name="presentableId" value="LOCAL-00009" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1703615702768</updated>
-+    </task>
-+    <option name="localTasksCounter" value="10" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -228,4 +236,4 @@
-     <MESSAGE value="docs" />
-     <option name="LAST_COMMIT_MESSAGE" value="docs" />
-   </component>
--</project>
-+</project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18__Changes_1.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1" date="1703852329709" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 29/12/2023 12:18 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="plan-bootstrap-service/src/main/resources/assets/keep-calm-and-love-jpa.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_12_18_[Changes]1/keep-calm-and-love-jpa.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_26_12_2023_18_33_[Changes]" date="1703615582872" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 26/12/2023 18:33 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_27_12_2023_16_20_[Changes]" date="1703694038053" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_20_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 27/12/2023 16:20 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_27_12_2023_16_40_[Changes]" date="1703695272600" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_40_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 27/12/2023 16:40 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_41_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,155 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanQueryServiceMain(1)\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"1796000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/.idea/workspace.xml	(date 1703695246804)
-@@ -5,7 +5,11 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="docs">
-+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -20,6 +24,11 @@
-     </option>
-   </component>
-   <component name="Git.Settings">
-+    <option name="RECENT_BRANCH_BY_REPOSITORY">
-+      <map>
-+        <entry key="$PROJECT_DIR$" value="master" />
-+      </map>
-+    </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
-   <component name="JpbToolWindowState">
-@@ -37,29 +46,30 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">{
--  &quot;keyToString&quot;: {
--    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
--    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
--    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
--    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
--    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
--    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,
--    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
--    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
--    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
--    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
--    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
--    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "RequestMappingsPanelOrder0": "0",
-+    "RequestMappingsPanelOrder1": "1",
-+    "RequestMappingsPanelWidth0": "75",
-+    "RequestMappingsPanelWidth1": "75",
-+    "RunOnceActivity.OpenProjectViewOnStart": "true",
-+    "RunOnceActivity.ShowReadmeOnStart": "true",
-+    "WebServerToolWindowFactoryState": "false",
-+    "jdk.selected.JAVA_MODULE": "corretto-18",
-+    "last_opened_file_path": "C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan",
-+    "node.js.detected.package.eslint": "true",
-+    "node.js.detected.package.tslint": "true",
-+    "node.js.selected.package.eslint": "(autodetect)",
-+    "node.js.selected.package.tslint": "(autodetect)",
-+    "nodejs_package_manager_path": "npm",
-+    "vue.rearranger.settings.migration": "true"
-   },
--  &quot;keyToStringList&quot;: {
--    &quot;DatabaseDriversLRU&quot;: [
--      &quot;h2&quot;
-+  "keyToStringList": {
-+    "DatabaseDriversLRU": [
-+      "h2"
-     ]
-   }
--}</component>
-+}]]></component>
-   <component name="RecentsManager">
-     <key name="MoveFile.RECENT_KEYS">
-       <recent name="C:\Users\Asus\Desktop\Faculdade\2023_2024\SISDIS\project\.idea" />
-@@ -73,7 +83,14 @@
-       </set>
-     </option>
-   </component>
--  <component name="RunManager" selected="Spring Boot.PlanQueryServiceMain(1)">
-+  <component name="RunManager" selected="Spring Boot.PlanBootstrapApplication">
-+    <configuration name="PlanBootstrapApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+      <module name="plan-bootstrap-service" />
-+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.planbootstrap.PlanBootstrapApplication" />
-+      <method v="2">
-+        <option name="Make" enabled="true" />
-+      </method>
-+    </configuration>
-     <configuration name="PlanCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-       <module name="plan-command-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanCommandServiceMain" />
-@@ -134,7 +151,7 @@
-       <workItem from="1702984447619" duration="6967000" />
-       <workItem from="1703018341972" duration="2157000" />
-       <workItem from="1703430925339" duration="3522000" />
--      <workItem from="1703601832909" duration="1796000" />
-+      <workItem from="1703601832909" duration="2121000" />
-     </task>
-     <task id="LOCAL-00001" summary="plan-command-service">
-       <option name="closed" value="true" />
-@@ -192,7 +209,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1703434404734</updated>
-     </task>
--    <option name="localTasksCounter" value="8" />
-+    <task id="LOCAL-00008" summary="docs">
-+      <option name="closed" value="true" />
-+      <created>1703608858516</created>
-+      <option name="number" value="00008" />
-+      <option name="presentableId" value="LOCAL-00008" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1703608858516</updated>
-+    </task>
-+    <option name="localTasksCounter" value="9" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -203,7 +228,19 @@
-       <map>
-         <entry key="MAIN">
-           <value>
--            <State />
-+            <State>
-+              <option name="FILTERS">
-+                <map>
-+                  <entry key="branch">
-+                    <value>
-+                      <list>
-+                        <option value="sprint3" />
-+                      </list>
-+                    </value>
-+                  </entry>
-+                </map>
-+              </option>
-+            </State>
-           </value>
-         </entry>
-       </map>
-@@ -217,4 +254,4 @@
-     <MESSAGE value="docs" />
-     <option name="LAST_COMMIT_MESSAGE" value="docs" />
-   </component>
--</project>
-\ No newline at end of file
-+</project>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2023_14_25_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,3124 +0,0 @@
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java
-new file mode 100644
---- /dev/null	(date 1703852314779)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java	(date 1703852314779)
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.consumer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.PlansService;
-+import lombok.RequiredArgsConstructor;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.annotation.RabbitListener;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class DeletePlanJsonConsumer {
-+
-+    private static final Logger logger = LoggerFactory.getLogger(DeletePlanJsonConsumer.class);
-+
-+    private final PlansService plansService;
-+
-+    @RabbitListener(queues = "#{deletePlanQueue.name}")
-+    public void receiveMessage(PlanDTO obj) {
-+        plansService.saveDeletedPlanRabbit(obj);
-+    }
-+
-+}
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Annotation profile for project\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <processorPath useClasspath=\"false\">\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.22/lombok-1.18.22.jar\" />\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/mapstruct/mapstruct-processor/1.4.2.Final/mapstruct-processor-1.4.2.Final.jar\" />\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.4.2.Final/mapstruct-1.4.2.Final.jar\" />\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-configuration-processor/2.4.2/spring-boot-configuration-processor-2.4.2.jar\" />\r\n        </processorPath>\r\n        <module name=\"plan-query-service\" />\r\n        <module name=\"subscription-command-service\" />\r\n        <module name=\"user-query-service\" />\r\n        <module name=\"plan-command-service\" />\r\n        <module name=\"subscription-query-service\" />\r\n        <module name=\"user-command-service\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"plan-command-service\" options=\"-parameters\" />\r\n      <module name=\"plan-query-service\" options=\"-parameters\" />\r\n      <module name=\"project\" options=\"-parameters\" />\r\n      <module name=\"subscription-command-service\" options=\"-parameters\" />\r\n      <module name=\"subscription-query-service\" options=\"-parameters\" />\r\n      <module name=\"user-command-service\" options=\"-parameters\" />\r\n      <module name=\"user-query-service\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
---- a/.idea/compiler.xml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/.idea/compiler.xml	(date 1703852389269)
-@@ -21,6 +21,9 @@
-         <module name="user-command-service" />
-       </profile>
-     </annotationProcessing>
-+    <bytecodeTargetLevel>
-+      <module name="plan-bootstrap-service" target="17" />
-+    </bytecodeTargetLevel>
-   </component>
-   <component name="JavacSettings">
-     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java
-new file mode 100644
---- /dev/null	(date 1703852314795)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java	(date 1703852314795)
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.consumer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.PlansService;
-+import lombok.RequiredArgsConstructor;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.annotation.RabbitListener;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class CreatePlanJsonConsumer {
-+
-+    private static final Logger logger = LoggerFactory.getLogger(CreatePlanJsonConsumer.class);
-+
-+    private final PlansService plansService;
-+
-+    @RabbitListener(queues = "#{createPlanQueue.name}")
-+    public void receiveMessage(PlanDTO obj) {
-+        plansService.saveCreatedPlanRabbit(obj);
-+    }
-+
-+}
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanQueryServiceMain(1)\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"1796000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/.idea/workspace.xml	(date 1703859852959)
-@@ -5,7 +5,56 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="docs">
-+      <change afterPath="$PROJECT_DIR$/docs/sprint2/process_view/user-uc/login_user/rabbit.puml" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/docs/sprint2/process_view/user-uc/register_user/rabbit.puml" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/CreatePlanJsonConsumer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/DeletePlanJsonConsumer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/assets/keep-calm-and-love-jpa.png" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/banner.txt" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/rsa.private.key" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/resources/rsa.public.key" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/docs/sprint2/process_view/user-uc/register_user/sdd2.puml" beforeDir="false" afterPath="$PROJECT_DIR$/docs/sprint2/process_view/user-uc/register_user/sdd2.puml" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -20,6 +69,11 @@
-     </option>
-   </component>
-   <component name="Git.Settings">
-+    <option name="RECENT_BRANCH_BY_REPOSITORY">
-+      <map>
-+        <entry key="$PROJECT_DIR$" value="sprint3" />
-+      </map>
-+    </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
-   <component name="JpbToolWindowState">
-@@ -37,30 +91,34 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">{
--  &quot;keyToString&quot;: {
--    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
--    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
--    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
--    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
--    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
--    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,
--    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
--    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
--    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
--    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
--    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
--    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "RequestMappingsPanelOrder0": "0",
-+    "RequestMappingsPanelOrder1": "1",
-+    "RequestMappingsPanelWidth0": "75",
-+    "RequestMappingsPanelWidth1": "75",
-+    "RunOnceActivity.OpenProjectViewOnStart": "true",
-+    "RunOnceActivity.ShowReadmeOnStart": "true",
-+    "WebServerToolWindowFactoryState": "false",
-+    "jdk.selected.JAVA_MODULE": "corretto-18",
-+    "last_opened_file_path": "C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/user-uc/login_user",
-+    "node.js.detected.package.eslint": "true",
-+    "node.js.detected.package.tslint": "true",
-+    "node.js.selected.package.eslint": "(autodetect)",
-+    "node.js.selected.package.tslint": "(autodetect)",
-+    "nodejs_package_manager_path": "npm",
-+    "vue.rearranger.settings.migration": "true"
-   },
--  &quot;keyToStringList&quot;: {
--    &quot;DatabaseDriversLRU&quot;: [
--      &quot;h2&quot;
-+  "keyToStringList": {
-+    "DatabaseDriversLRU": [
-+      "h2"
-     ]
-   }
--}</component>
-+}]]></component>
-   <component name="RecentsManager">
-+    <key name="CopyFile.RECENT_KEYS">
-+      <recent name="C:\Users\Asus\Desktop\Faculdade\2023_2024\SISDIS\project\docs\sprint2\process_view\user-uc\login_user" />
-+    </key>
-     <key name="MoveFile.RECENT_KEYS">
-       <recent name="C:\Users\Asus\Desktop\Faculdade\2023_2024\SISDIS\project\.idea" />
-     </key>
-@@ -73,15 +131,22 @@
-       </set>
-     </option>
-   </component>
--  <component name="RunManager" selected="Spring Boot.PlanQueryServiceMain(1)">
--    <configuration name="PlanCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+  <component name="RunManager" selected="Spring Boot.UserQueryServiceMain">
-+    <configuration name="PlanBootstrapApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+      <module name="plan-bootstrap-service" />
-+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.planbootstrap.PlanBootstrapApplication" />
-+      <method v="2">
-+        <option name="Make" enabled="true" />
-+      </method>
-+    </configuration>
-+    <configuration name="PlanCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="PlanCommandService" nameIsGenerated="true">
-       <module name="plan-command-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanCommandServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="PlanQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="PlanQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="PlanQueryService" nameIsGenerated="true">
-       <module name="plan-query-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.PlanQueryServiceMain" />
-       <method v="2">
-@@ -102,20 +167,33 @@
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="UserCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="UserCommandServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="UserCommandService" nameIsGenerated="true">
-       <module name="user-command-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.UserCommandServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
--    <configuration name="UserQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-+    <configuration name="UserQueryServiceMain" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" folderName="UserQueryService" nameIsGenerated="true">
-       <module name="user-query-service" />
-       <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.psoft_22_23_project.UserQueryServiceMain" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
-+    <list>
-+      <item itemvalue="Spring Boot.PlanCommandServiceMain(1)" />
-+      <item itemvalue="Spring Boot.PlanCommandServiceMain" />
-+      <item itemvalue="Spring Boot.PlanQueryServiceMain(1)" />
-+      <item itemvalue="Spring Boot.PlanQueryServiceMain" />
-+      <item itemvalue="Spring Boot.UserCommandServiceMain(1)" />
-+      <item itemvalue="Spring Boot.UserCommandServiceMain" />
-+      <item itemvalue="Spring Boot.UserQueryServiceMain(1)" />
-+      <item itemvalue="Spring Boot.UserQueryServiceMain" />
-+      <item itemvalue="Spring Boot.PlanBootstrapApplication" />
-+      <item itemvalue="Spring Boot.SubscriptionCommandServiceMain" />
-+      <item itemvalue="Spring Boot.SubscriptionQueryServiceMain" />
-+    </list>
-   </component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-   <component name="TaskManager">
-@@ -134,7 +212,7 @@
-       <workItem from="1702984447619" duration="6967000" />
-       <workItem from="1703018341972" duration="2157000" />
-       <workItem from="1703430925339" duration="3522000" />
--      <workItem from="1703601832909" duration="1796000" />
-+      <workItem from="1703601832909" duration="2121000" />
-     </task>
-     <task id="LOCAL-00001" summary="plan-command-service">
-       <option name="closed" value="true" />
-@@ -192,7 +270,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1703434404734</updated>
-     </task>
--    <option name="localTasksCounter" value="8" />
-+    <task id="LOCAL-00008" summary="docs">
-+      <option name="closed" value="true" />
-+      <created>1703608858516</created>
-+      <option name="number" value="00008" />
-+      <option name="presentableId" value="LOCAL-00008" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1703608858516</updated>
-+    </task>
-+    <option name="localTasksCounter" value="9" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -203,7 +289,19 @@
-       <map>
-         <entry key="MAIN">
-           <value>
--            <State />
-+            <State>
-+              <option name="FILTERS">
-+                <map>
-+                  <entry key="branch">
-+                    <value>
-+                      <list>
-+                        <option value="master" />
-+                      </list>
-+                    </value>
-+                  </entry>
-+                </map>
-+              </option>
-+            </State>
-           </value>
-         </entry>
-       </map>
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java
-new file mode 100644
---- /dev/null	(date 1703852293455)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/PlanBootstrapServiceMain.java	(date 1703852293455)
-@@ -0,0 +1,12 @@
-+package com.example.psoft_22_23_project;
-+
-+import org.springframework.boot.SpringApplication;
-+import org.springframework.boot.autoconfigure.SpringBootApplication;
-+
-+@SpringBootApplication
-+public class PlanBootstrapServiceMain {
-+
-+	public static void main(String[] args) {
-+		SpringApplication.run(PlanBootstrapServiceMain.class, args);
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java
-new file mode 100644
---- /dev/null	(date 1703852314812)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansService.java	(date 1703852314812)
-@@ -0,0 +1,32 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.services;
-+
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+
-+public interface PlansService {
-+
-+    void saveCreatedPlanRabbit(PlanDTO obj);
-+	void saveUpdatedPlanRabbit(PlanDTO obj);
-+	void saveDeletedPlanRabbit(PlanDTO obj);
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java
-new file mode 100644
---- /dev/null	(date 1703852314746)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PromotionResult.java	(date 1703852314746)
-@@ -0,0 +1,14 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Getter;
-+import lombok.Setter;
-+
-+@Getter
-+@Setter
-+public class PromotionResult {
-+
-+    private Plans newPromotedPlan;
-+    private Plans previousPromotedPlan;
-+
-+}
-+
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java
-new file mode 100644
---- /dev/null	(date 1703852314762)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/UpdatePlanJsonConsumer.java	(date 1703852314762)
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.consumer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.PlansService;
-+import lombok.RequiredArgsConstructor;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.annotation.RabbitListener;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class UpdatePlanJsonConsumer {
-+
-+    private static final Logger logger = LoggerFactory.getLogger(UpdatePlanJsonConsumer.class);
-+
-+    private final PlansService plansService;
-+
-+    @RabbitListener(queues = "#{updatePlanQueue.name}")
-+    public void receiveMessage(PlanDTO obj) {
-+        plansService.saveUpdatedPlanRabbit(obj);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java
-new file mode 100644
---- /dev/null	(date 1703852314678)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicSuggestion.java	(date 1703852314678)
-@@ -0,0 +1,30 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Pattern;
-+
-+
-+@Embeddable
-+@Data
-+public class MusicSuggestion {
-+    @Column(name = "Music_Suggestion")
-+    @NotNull
-+    @Pattern(regexp = "(automatic|personalized)")
-+    private String musicSuggestion;
-+
-+    public void setMusicSuggestion(String musicSuggestion) {
-+        if (musicSuggestion.equals("automatic") || musicSuggestion.equals("personalized")){
-+            this.musicSuggestion = musicSuggestion;
-+
-+        }else throw new IllegalArgumentException("Music Suggestion can only be 'personalized' or 'automatic' ");
-+
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java
-new file mode 100644
---- /dev/null	(date 1703852314694)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MusicCollection.java	(date 1703852314694)
-@@ -0,0 +1,28 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class MusicCollection {
-+    @Column(name = "Music_Collection")
-+    @NotNull
-+    @Min(0)
-+    private Integer musicCollection;
-+
-+    public void setMusicCollection(Integer musicCollection) {
-+        if (musicCollection == null || musicCollection < 0) {
-+            throw new IllegalArgumentException("Music Collection number must be positive");
-+        }
-+        this.musicCollection = musicCollection;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java
-new file mode 100644
---- /dev/null	(date 1703852314712)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/FeeRevision.java	(date 1703852314712)
-@@ -0,0 +1,37 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+
-+import javax.persistence.Embeddable;
-+import java.time.LocalDate;
-+
-+
-+@Data
-+@Embeddable
-+public class FeeRevision {
-+
-+    private Double annualFee;
-+    private Double monthlyFee;
-+    private String user;
-+    private String time;
-+
-+
-+    public FeeRevision(Double annualFee,Double monthlyFee, String user) {
-+        this.annualFee = annualFee;
-+        this.monthlyFee = monthlyFee;
-+        this.user = user;
-+        this.time = LocalDate.now().toString();
-+
-+    }
-+
-+    public FeeRevision(Double annualFee,Double monthlyFee) {
-+        this.annualFee = annualFee;
-+        this.monthlyFee = monthlyFee;
-+        this.user = "Created With";
-+        this.time = LocalDate.now().toString();
-+    }
-+
-+    public FeeRevision() {
-+
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java
-new file mode 100644
---- /dev/null	(date 1703852314728)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MaximumNumberOfUsers.java	(date 1703852314728)
-@@ -0,0 +1,27 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class MaximumNumberOfUsers {
-+    @Column(name = "Maximum_Number_Of_Users")
-+    @NotNull
-+    @Min(0)
-+    private Integer maximumNumberOfUsers;
-+
-+    public void setMaximumNumberOfUsers(Integer maximumNumberOfUsers) {
-+        if (maximumNumberOfUsers == null || maximumNumberOfUsers < 0) {
-+            throw new IllegalArgumentException("Maximum Number Of Users must be positive");
-+        }
-+        this.maximumNumberOfUsers = maximumNumberOfUsers;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java
-new file mode 100644
---- /dev/null	(date 1703852314627)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/AnnualFee.java	(date 1703852314627)
-@@ -0,0 +1,27 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class AnnualFee {
-+    @Column(name = "Annual_Fee")
-+    @NotNull
-+    @Min(0)
-+    private double annualFee;
-+
-+    public void setAnnualFee(double annualFee) {
-+        if (annualFee < 0) {
-+            throw new IllegalArgumentException("Annual_Fee must be positive");
-+        }
-+        this.annualFee = annualFee;
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java
-new file mode 100644
---- /dev/null	(date 1703852314644)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Promoted.java	(date 1703852314644)
-@@ -0,0 +1,21 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class Promoted {
-+    @Column(name = "Is_Promoted")
-+    @NotNull
-+    private Boolean promoted;
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java
-new file mode 100644
---- /dev/null	(date 1703852314662)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/NumberOfMinutes.java	(date 1703852314662)
-@@ -0,0 +1,47 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Size;
-+import java.util.regex.Matcher;
-+import java.util.regex.Pattern;
-+
-+@Embeddable
-+@Data
-+public class NumberOfMinutes {
-+    @Column(name = "Number_Of_Minutes")
-+    @NotNull
-+    @Size(min = 1)
-+    private String numberOfMinutes;
-+
-+    public void setNumberOfMinutes(String numberOfMinutes) {
-+        if (numberOfMinutes == null || numberOfMinutes.isBlank()) {
-+            throw new IllegalArgumentException("Number Of Minutes is a mandatory attribute of Plan");
-+        }
-+        if (!isValidInput(numberOfMinutes)){
-+            throw new IllegalArgumentException("Number Of Minutes can only be a positive number or 'unlimited'");
-+        }
-+        this.numberOfMinutes = numberOfMinutes;
-+    }
-+
-+    public static boolean isValidInput(String input) {
-+        // Regex pattern for matching "unlimited" or a positive number
-+        String pattern = "^unlimited$|^[1-9]\\d*$";
-+
-+        // Create a pattern object
-+        Pattern regex = Pattern.compile(pattern);
-+
-+        // Create a matcher object
-+        Matcher matcher = regex.matcher(input);
-+
-+        // Check if the input matches the pattern
-+        return matcher.matches();
-+    }
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java
-new file mode 100644
---- /dev/null	(date 1703852314556)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Active.java	(date 1703852314556)
-@@ -0,0 +1,17 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+@Embeddable
-+@Data
-+public class Active {
-+    @Column(name = "Is_Active")
-+    private Boolean active;
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java
-new file mode 100644
---- /dev/null	(date 1703852314576)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Plans.java	(date 1703852314576)
-@@ -0,0 +1,168 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.Setter;
-+import org.hibernate.StaleObjectStateException;
-+import org.hibernate.annotations.SQLDelete;
-+import org.hibernate.annotations.Where;
-+import org.hibernate.envers.Audited;
-+
-+import javax.persistence.*;
-+import java.util.ArrayList;
-+import java.util.List;
-+
-+
-+@Entity
-+@Table(name = "Plans")
-+@SQLDelete(sql = "UPDATE Plans SET Is_Deleted = true WHERE id=?")
-+@Where(clause = "Is_Deleted=false")
-+@Getter
-+public class Plans {
-+
-+    public Plans(Name name,
-+                 Description description,
-+                 NumberOfMinutes numberOfMinutes,
-+                 MaximumNumberOfUsers maximumNumberOfUsers,
-+                 MusicCollection musicCollection,
-+                 MusicSuggestion musicSuggestion,
-+                 AnnualFee annualFee,
-+                 MonthlyFee monthlyFee,
-+                 Active active,
-+                 Promoted promoted) {
-+        this.name = name;
-+        this.description= description;
-+        this.numberOfMinutes = numberOfMinutes;
-+        this.maximumNumberOfUsers = maximumNumberOfUsers;
-+        this.musicCollection = musicCollection;
-+        this.musicSuggestion = musicSuggestion;
-+        this.annualFee = annualFee;
-+        this.monthlyFee = monthlyFee;
-+        this.active = active;
-+        this.promoted = promoted;
-+        this.deleted = new Deleted();
-+        FeeRevision feeRevision1 = new FeeRevision(annualFee.getAnnualFee(),monthlyFee.getMonthlyFee());
-+        feeRevisions.add(feeRevision1);
-+    }
-+
-+    protected  Plans(){}
-+
-+    @Id
-+    @GeneratedValue(strategy = GenerationType.IDENTITY)
-+    private Long id;
-+
-+    @Version
-+    private long version;
-+    @Embedded
-+    private Name name;
-+    @Embedded
-+    private Description description;
-+    @Embedded
-+    private NumberOfMinutes numberOfMinutes;
-+    @Embedded
-+    private MaximumNumberOfUsers maximumNumberOfUsers;
-+    @Embedded
-+    private MusicCollection musicCollection;
-+    @Embedded
-+    private MusicSuggestion musicSuggestion;
-+    @Embedded
-+    private AnnualFee annualFee;
-+    @Embedded
-+    private MonthlyFee monthlyFee ;
-+    @Embedded
-+    private Active active;
-+    @Embedded
-+    private Promoted promoted;
-+    @Embedded
-+    private Deleted deleted;
-+
-+
-+    @ElementCollection
-+    private List<FeeRevision> feeRevisions = new ArrayList<>();
-+
-+
-+//@OneToMany(mappedBy = "plan", cascade = CascadeType.ALL, orphanRemoval = true)
-+// private List<Subscriptions> subscriptions = new ArrayList<>();
-+
-+
-+    public void updateData(long desiredVersion, String description,
-+                           Integer maximumNumberOfUsers,
-+                           String numberOfMinutes , Integer musicCollections,
-+                           String musicSuggestions, Boolean active, Boolean promoted) {
-+
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+        if(description != null){
-+            this.description.setDescription(description);
-+        }
-+
-+        if(maximumNumberOfUsers != null){
-+            this.maximumNumberOfUsers.setMaximumNumberOfUsers(maximumNumberOfUsers);
-+        }
-+
-+        if(musicCollections != null){
-+            this.musicCollection.setMusicCollection(musicCollections);
-+        }
-+
-+        if(numberOfMinutes != null){
-+            this.numberOfMinutes.setNumberOfMinutes(numberOfMinutes);
-+        }
-+
-+        if(musicSuggestions != null){
-+            this.musicSuggestion.setMusicSuggestion(musicSuggestions);
-+        }
-+        if(active != null){
-+            this.active.setActive(active);
-+        }
-+        if(promoted != null){
-+            this.promoted.setPromoted(promoted);
-+        }
-+
-+
-+    }
-+
-+
-+    public void moneyData(long desiredVersion, Double annualFee, Double monthlyFee, String name) {
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+        if (annualFee != null || monthlyFee != null){
-+            FeeRevision feeRevision1 = new FeeRevision(annualFee,monthlyFee,name);
-+            feeRevisions.add(feeRevision1);
-+
-+        }
-+        if(annualFee != null){
-+
-+            this.annualFee.setAnnualFee(annualFee);
-+        }
-+
-+        if(monthlyFee != null){
-+
-+            this.monthlyFee.setMonthlyFee(monthlyFee);
-+        }
-+
-+    }
-+
-+    public void deactivate(final long desiredVersion) {
-+        // check current version
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+
-+        this.active.setActive(false);
-+    }
-+
-+    public void promote(final long desiredVersion) {
-+        // check current version
-+        if (this.version != desiredVersion) {
-+            throw new StaleObjectStateException("Object was already modified by another user", this.id);
-+        }
-+
-+        this.promoted.setPromoted(true);
-+    }
-+
-+
-+}
-+
-+
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java
-new file mode 100644
---- /dev/null	(date 1703852314593)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Description.java	(date 1703852314593)
-@@ -0,0 +1,26 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Size;
-+
-+@Embeddable
-+@Data
-+public class Description {
-+    @Column(name = "Description")
-+    @NotNull
-+    @Size(min = 1)
-+    private String description;
-+
-+    public void setDescription(String description) {
-+        if (description == null || description.isBlank()) {
-+            throw new IllegalArgumentException("Description is a mandatory attribute of Plan");
-+        }
-+        this.description = description;
-+    }
-+}
-Index: docs/sprint2/process_view/user-uc/register_user/sdd2.puml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>@startuml\r\n'autocomplete on\r\nautonumber\r\n\r\ntitle Software Design Document - As User, I want to register an account\r\n\r\nactor \"User\" as Ac\r\nparticipant \"userC[n]:UserC\" as UC\r\nparticipant \"userQ[n]:UserQ\" as UQ\r\nparticipant \"SubsC[n]:SubsC\" as SC\r\nparticipant \"SubsQ[n]:SubsQ:\" as SQ\r\nparticipant \"Message Broker:\" as mb\r\n\r\n\r\nactivate mb\r\nUQ -> mb : subscribe(register_user)\r\nSC -> mb : subscribe(register_user)\r\nSQ -> mb : subscribe(register_user)\r\ndeactivate mb\r\n\r\n\r\nnote left\r\n[n] represents the the instances\r\nit can be n instances\r\nend note\r\n\r\nAc -> UC ++ : POST /register\r\nUC -> UC : findUser(name)\r\nUC -> mb ++ : publish(register_user, user)\r\nUC --> Ac -- : informs operation (in)success\r\n\r\nmb -> UQ ++ : notify(register_user, user)\r\nUQ -> UQ -- : save(plan)\r\n\r\nmb -> SC ++ : notify(register_user, user)\r\nSC -> SC -- : save(plan)\r\n\r\nmb -> SQ ++ : notify(register_user, user)\r\nSQ -> SQ : save(plan)\r\n\r\n\r\n@enduml\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/docs/sprint2/process_view/user-uc/register_user/sdd2.puml b/docs/sprint2/process_view/user-uc/register_user/sdd2.puml
---- a/docs/sprint2/process_view/user-uc/register_user/sdd2.puml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/docs/sprint2/process_view/user-uc/register_user/sdd2.puml	(date 1703853740381)
-@@ -12,31 +12,29 @@
- participant "Message Broker:" as mb
- 
- 
--activate mb
--UQ -> mb : subscribe(register_user)
--SC -> mb : subscribe(register_user)
--SQ -> mb : subscribe(register_user)
--deactivate mb
--
--
-+Ac -> UC ++ : POST /register
-+UC -> UC : save()
-+UC -> mb ++ : publish(register_user, user)
- note left
- [n] represents the the instances
- it can be n instances
- end note
--
--Ac -> UC ++ : POST /register
--UC -> UC : findUser(name)
--UC -> mb ++ : publish(register_user, user)
- UC --> Ac -- : informs operation (in)success
- 
-+...
-+
-+
-+mb -> UC ++ : notify(register_user, user)
-+UC -> UC -- : save(user)
-+
- mb -> UQ ++ : notify(register_user, user)
--UQ -> UQ -- : save(plan)
-+UQ -> UQ -- : save(user)
- 
- mb -> SC ++ : notify(register_user, user)
--SC -> SC -- : save(plan)
-+SC -> SC -- : save(user)
- 
- mb -> SQ ++ : notify(register_user, user)
--SQ -> SQ : save(plan)
-+SQ -> SQ : save(user)
- 
- 
- @enduml
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java
-new file mode 100644
---- /dev/null	(date 1703852314609)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/MonthlyFee.java	(date 1703852314609)
-@@ -0,0 +1,29 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+
-+@Embeddable
-+@Data
-+public class MonthlyFee {
-+    @Column(name = "Monthly_Fee")
-+    @NotNull
-+    @Min(0)
-+    private double monthlyFee;
-+
-+    public void setMonthlyFee(double monthlyFee) {
-+        if (monthlyFee < 0) {
-+            throw new IllegalArgumentException("Monthly Fee must be positive");
-+        }
-+        this.monthlyFee = monthlyFee;
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java
-new file mode 100644
---- /dev/null	(date 1703852314500)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Name.java	(date 1703852314500)
-@@ -0,0 +1,27 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.*;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Size;
-+
-+
-+@Embeddable
-+@Data
-+public class Name {
-+        @Column(name = "Name", unique = true)
-+        @NotNull
-+        @Size(min = 1)
-+        private String name;
-+
-+        public void setName(String name) {
-+                if (name == null || name.isBlank()) {
-+                        throw new IllegalArgumentException("'name' is a mandatory attribute of Plan");
-+                }
-+                this.name = name;
-+        }
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java
-new file mode 100644
---- /dev/null	(date 1703852314520)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/PlanDTO.java	(date 1703852314520)
-@@ -0,0 +1,45 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import org.springframework.lang.Nullable;
-+
-+import javax.validation.constraints.Min;
-+import javax.validation.constraints.NotNull;
-+import javax.validation.constraints.Pattern;
-+import javax.validation.constraints.Size;
-+
-+@Data
-+public class PlanDTO {
-+
-+
-+    private String version;
-+    @Size(min = 1)
-+    @NotNull
-+    private String name;
-+    @Size(min = 1)
-+    @NotNull
-+    private String description;
-+    @Size(min = 1)
-+    @NotNull
-+    private String numberOfMinutes;
-+    @Pattern(regexp = "(automatic|personalized)")
-+    @NotNull
-+    private String musicSuggestion;
-+    @Min(0)
-+    @NotNull
-+    private String maximumNumberOfUsers;
-+    @Min(0)
-+    @NotNull
-+    private String musicCollection;
-+    @Min(0)
-+    @NotNull
-+    private String annualFee;
-+    @Min(0)
-+    @NotNull
-+    private String monthlyFee;
-+    @Nullable
-+    private String active;
-+    @Nullable
-+    private String promoted;
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java
-new file mode 100644
---- /dev/null	(date 1703852314538)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/model/Deleted.java	(date 1703852314538)
-@@ -0,0 +1,17 @@
-+package com.example.psoft_22_23_project.plansmanagement.model;
-+
-+import lombok.Data;
-+import lombok.Getter;
-+import lombok.RequiredArgsConstructor;
-+import lombok.Setter;
-+
-+import javax.persistence.Column;
-+import javax.persistence.Embeddable;
-+
-+@Embeddable
-+@Data
-+public class Deleted {
-+    @Column(name = "Is_Deleted")
-+    private boolean deleted = Boolean.FALSE;
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java
-new file mode 100644
---- /dev/null	(date 1703852314482)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java	(date 1703852314482)
-@@ -0,0 +1,52 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.configuration;
-+
-+import com.example.psoft_22_23_project.filestoragemanagement.service.FileStorageProperties;
-+import io.swagger.v3.oas.models.OpenAPI;
-+import io.swagger.v3.oas.models.info.Contact;
-+import io.swagger.v3.oas.models.info.Info;
-+import io.swagger.v3.oas.models.info.License;
-+import org.springframework.boot.context.properties.EnableConfigurationProperties;
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.web.filter.ShallowEtagHeaderFilter;
-+
-+@Configuration
-+@EnableConfigurationProperties({ FileStorageProperties.class })
-+public class ApiConfig {
-+
-+
-+
-+	@Bean
-+	public ShallowEtagHeaderFilter shallowEtagHeaderFilter() {
-+		return new ShallowEtagHeaderFilter();
-+	}
-+
-+
-+
-+	@Bean
-+	public OpenAPI openApi() {
-+		return new OpenAPI().info(new Info().title("Music API").description("Project API").version("v1.0")
-+				.contact(new Contact().name("ISEP").email("grupo1@isep.ipp.pt")).termsOfService("TOC")
-+				.license(new License().name("MIT").url("#")));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java
-new file mode 100644
---- /dev/null	(date 1703852314896)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/CreatePlansMapper.java	(date 1703852314896)
-@@ -0,0 +1,57 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.services;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.mapstruct.Mapper;
-+import org.mapstruct.Mapping;
-+import org.mapstruct.MappingTarget;
-+
-+@Mapper(componentModel = "spring")
-+public abstract class CreatePlansMapper {
-+
-+	@Mapping(source = "request.name", target = "name.name")
-+	@Mapping(source = "request.description", target = "description.description")
-+	@Mapping(source = "request.numberOfMinutes", target = "numberOfMinutes.numberOfMinutes")
-+	@Mapping(source = "request.maximumNumberOfUsers", target = "maximumNumberOfUsers.maximumNumberOfUsers")
-+	@Mapping(source = "request.musicCollection", target = "musicCollection.musicCollection")
-+	@Mapping(source = "request.musicSuggestion", target = "musicSuggestion.musicSuggestion")
-+	@Mapping(source = "request.annualFee", target = "annualFee.annualFee")
-+	@Mapping(source = "request.monthlyFee", target = "monthlyFee.monthlyFee")
-+	@Mapping(source = "request.active", target = "active.active")
-+	@Mapping(source = "request.promoted", target = "promoted.promoted")
-+	public abstract Plans createPlanFromDTO(PlanDTO request);
-+
-+	@Mapping(source = "request.name.name", target = "name")
-+	@Mapping(source = "request.version", target = "version")
-+	@Mapping(source = "request.description.description", target = "description")
-+	@Mapping(source = "request.numberOfMinutes.numberOfMinutes", target = "numberOfMinutes")
-+	@Mapping(source = "request.maximumNumberOfUsers.maximumNumberOfUsers", target = "maximumNumberOfUsers")
-+	@Mapping(source = "request.musicCollection.musicCollection", target = "musicCollection")
-+	@Mapping(source = "request.musicSuggestion.musicSuggestion", target = "musicSuggestion")
-+	@Mapping(source = "request.annualFee.annualFee", target = "annualFee")
-+	@Mapping(source = "request.monthlyFee.monthlyFee", target = "monthlyFee")
-+	@Mapping(source = "request.active.active", target = "active")
-+	@Mapping(source = "request.promoted.promoted", target = "promoted")
-+	public abstract PlanDTO createDTOFromPlan(Plans request);
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java
-new file mode 100644
---- /dev/null	(date 1703852314911)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/PlansServiceImpl.java	(date 1703852314911)
-@@ -0,0 +1,116 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.services;
-+
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.*;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import com.example.psoft_22_23_project.plansmanagement.services.consumer.CreatePlanJsonConsumer;
-+import com.example.psoft_22_23_project.plansmanagement.services.producer.CreatePlanJsonProducer;
-+import com.example.psoft_22_23_project.plansmanagement.services.producer.DeletePlanJsonProducer;
-+import com.example.psoft_22_23_project.plansmanagement.services.producer.UpdatePlanJsonProducer;
-+import com.fasterxml.jackson.core.type.TypeReference;
-+import com.fasterxml.jackson.databind.ObjectMapper;
-+import lombok.RequiredArgsConstructor;
-+
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+@RequiredArgsConstructor
-+public class PlansServiceImpl implements PlansService {
-+
-+	private final PlansRepositoryBD plansRepository;
-+
-+	private final CreatePlansMapper createPlansMapper;
-+	private static final Logger logger = LoggerFactory.getLogger(PlansServiceImpl.class);
-+
-+	private final CreatePlanJsonProducer createPlanJsonProducer;
-+
-+	private final UpdatePlanJsonProducer updatePlanJsonProducer;
-+
-+	private final DeletePlanJsonProducer deletePlanJsonProducer;
-+
-+	@Override
-+	public void saveCreatedPlanRabbit(PlanDTO dto) {
-+
-+		Plans obj = createPlansMapper.createPlanFromDTO(dto);
-+
-+		// Check if the plan already exists in the local database
-+		if (plansRepository.findByName_Name(obj.getName().getName()).isEmpty()) {
-+			// Plan doesn't exist locally, so create it
-+			plansRepository.save(obj);
-+			logger.info("Plan added to the local database.");
-+		} else {
-+			logger.warn("Plan already exists in the local database. No action taken.");
-+		}
-+	}
-+
-+	@Override
-+	public void saveUpdatedPlanRabbit(PlanDTO dto) {
-+
-+		Plans obj = createPlansMapper.createPlanFromDTO(dto);
-+
-+		try {
-+			Plans existingPlan = plansRepository.findByName_Name(obj.getName().getName()).orElse(null);
-+
-+			if (existingPlan != null && existingPlan.getVersion() != Long.parseLong(dto.getVersion())) {
-+
-+				existingPlan.updateData(existingPlan.getVersion(), obj.getDescription().getDescription(),
-+						obj.getMaximumNumberOfUsers().getMaximumNumberOfUsers(), obj.getNumberOfMinutes().getNumberOfMinutes(),
-+						obj.getMusicCollection().getMusicCollection(), obj.getMusicSuggestion().getMusicSuggestion(),
-+						obj.getActive().getActive(), obj.getPromoted().getPromoted());
-+
-+				plansRepository.save(existingPlan);
-+				logger.info("Plan updated to the local database.");
-+			} else {
-+				logger.warn("Received plan has an older version or already updated in the local database. No action taken.");
-+			}
-+		} catch (Exception e) {
-+			logger.error("Error processing received message: {}", e.getMessage(), e);
-+			// Handle the exception as needed, possibly retry or log an error.
-+		}
-+	}
-+
-+	@Override
-+	public void saveDeletedPlanRabbit(PlanDTO dto) {
-+
-+		Plans obj = createPlansMapper.createPlanFromDTO(dto);
-+
-+		try {
-+			Plans existingPlan = plansRepository.findByName_Name(obj.getName().getName()).orElse(null);
-+
-+			if (existingPlan != null && existingPlan.getVersion() != Long.parseLong(dto.getVersion())) {
-+
-+				existingPlan.deactivate(existingPlan.getVersion());
-+
-+				plansRepository.save(existingPlan);
-+				logger.info("Plan deleted in the local database.");
-+			} else {
-+				logger.warn("Received plan has an older version or already deleted in the local database. No action taken.");
-+			}
-+		} catch (Exception e) {
-+			logger.error("Error processing received message: {}", e.getMessage(), e);
-+			// Handle the exception as needed, possibly retry or log an error.
-+		}
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java
-new file mode 100644
---- /dev/null	(date 1703852293382)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java	(date 1703852293382)
-@@ -0,0 +1,25 @@
-+package com.example.psoft_22_23_project.filestoragemanagement.service;
-+
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.boot.context.properties.ConfigurationProperties;
-+import org.springframework.context.annotation.ComponentScan;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.stereotype.Component;
-+
-+@ConfigurationProperties("file")
-+@Configuration
-+public class FileStorageProperties {
-+	private String uploadDir;
-+
-+	public FileStorageProperties(@Value("${file.upload-dir}") String uploadDir) {
-+		this.uploadDir = uploadDir;
-+	}
-+
-+	public String getUploadDir() {
-+		return uploadDir;
-+	}
-+
-+	public void setUploadDir(String uploadDir) {
-+		this.uploadDir = uploadDir;
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java
-new file mode 100644
---- /dev/null	(date 1703852314444)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java	(date 1703852314444)
-@@ -0,0 +1,228 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.configuration;
-+
-+import com.nimbusds.jose.jwk.JWK;
-+import com.nimbusds.jose.jwk.JWKSet;
-+import com.nimbusds.jose.jwk.RSAKey;
-+import com.nimbusds.jose.jwk.source.ImmutableJWKSet;
-+import com.nimbusds.jose.jwk.source.JWKSource;
-+import com.nimbusds.jose.proc.SecurityContext;
-+import lombok.RequiredArgsConstructor;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.http.HttpMethod;
-+import org.springframework.security.authentication.AuthenticationManager;
-+import org.springframework.security.config.Customizer;
-+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
-+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
-+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
-+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
-+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
-+import org.springframework.security.config.http.SessionCreationPolicy;
-+import org.springframework.security.core.userdetails.UsernameNotFoundException;
-+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
-+import org.springframework.security.crypto.password.PasswordEncoder;
-+import org.springframework.security.oauth2.jwt.JwtDecoder;
-+import org.springframework.security.oauth2.jwt.JwtEncoder;
-+import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;
-+import org.springframework.security.oauth2.jwt.NimbusJwtEncoder;
-+import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;
-+import org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;
-+import org.springframework.security.oauth2.server.resource.web.BearerTokenAuthenticationEntryPoint;
-+import org.springframework.security.oauth2.server.resource.web.access.BearerTokenAccessDeniedHandler;
-+import org.springframework.web.cors.CorsConfiguration;
-+import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
-+import org.springframework.web.filter.CorsFilter;
-+
-+import java.security.interfaces.RSAPrivateKey;
-+import java.security.interfaces.RSAPublicKey;
-+
-+import static java.lang.String.format;
-+
-+/**
-+ * Check https://www.baeldung.com/security-spring and
-+ * https://www.toptal.com/spring/spring-security-tutorial
-+ * <p>
-+ * Based on https://github.com/Yoh0xFF/java-spring-security-example/
-+ *
-+ * @author pagsousa
-+ *
-+ */
-+@EnableWebSecurity
-+@EnableGlobalMethodSecurity(securedEnabled = true, jsr250Enabled = true, prePostEnabled = true)
-+@RequiredArgsConstructor
-+public class SecurityConfig extends WebSecurityConfigurerAdapter {
-+
-+//	private final UserRepository userRepo;
-+
-+	@Value("${jwt.public.key}")
-+	private RSAPublicKey rsaPublicKey;
-+
-+	@Value("${jwt.private.key}")
-+	private RSAPrivateKey rsaPrivateKey;
-+
-+	@Value("${springdoc.api-docs.path}")
-+	private String restApiDocPath;
-+
-+	@Value("${springdoc.swagger-ui.path}")
-+	private String swaggerPath;
-+
-+//	@Override
-+//	protected void configure(final AuthenticationManagerBuilder auth) throws Exception {
-+//		auth.userDetailsService(username -> userRepo.findByUsername(username)
-+//				.orElseThrow(() -> new UsernameNotFoundException(format("User: %s, not found", username))));
-+//	}
-+
-+
-+	@Override
-+	protected void configure(HttpSecurity http) throws Exception {
-+		// Enable CORS and disable CSRF
-+		http = http.cors().and().csrf().disable();
-+
-+		// Set session management to stateless
-+		http = http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and();
-+
-+		// Set unauthorized requests exception handler
-+		http = http.exceptionHandling(
-+				exceptions -> exceptions.authenticationEntryPoint(new BearerTokenAuthenticationEntryPoint())
-+						.accessDeniedHandler(new BearerTokenAccessDeniedHandler()));
-+
-+		// Set permissions on endpoints
-+		http.authorizeRequests()
-+				// Swagger endpoints must be publicly accessible
-+				.antMatchers("/").permitAll().antMatchers(format("%s/**", restApiDocPath)).permitAll()
-+				.antMatchers(format("%s/**", swaggerPath)).permitAll()
-+				.antMatchers("/api-docs/**").permitAll()
-+				.antMatchers("/swagger-ui/**").permitAll()
-+				.antMatchers("/h2/**").permitAll();
-+
-+		// Testing phase //TODO add permissions
-+		// Set permissions on endpoints
-+		http.authorizeRequests()
-+				.antMatchers("/**").permitAll()
-+				.anyRequest().authenticated()
-+				// Set up oauth2 resource server
-+				.and().httpBasic(Customizer.withDefaults()).oauth2ResourceServer().jwt();
-+
-+//
-+//				// Our public endpoints
-+//				http.authorizeRequests()
-+//
-+//						//all public endpoints
-+//						.antMatchers("/api/public/**").permitAll()
-+//
-+//						// Plans management
-+//						.antMatchers(HttpMethod.GET,"/api/plans/**").permitAll()
-+//
-+//						// get a device image management
-+//						.antMatchers(HttpMethod.GET, "/api/device/photo/**").permitAll()
-+//
-+//						.antMatchers(HttpMethod.GET,"/api/subscriptions/list").hasRole(Role.User_Admin)
-+//						.antMatchers(HttpMethod.POST,"/api/subscriptions/create/").permitAll()
-+//						.antMatchers(HttpMethod.GET,"/api/subscriptions/").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/renew").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/change/{name}").hasRole(Role.Subscriber)
-+//						.antMatchers(HttpMethod.PATCH,"/api/subscriptions/change/{actualPlan}/{newPlan}").hasRole(Role.Marketing_Director)
-+//						.antMatchers("/api/public/subscriptions/**").permitAll()
-+//
-+//						//private endpoints
-+//
-+//						// device management
-+//						.antMatchers("/api/device/**").hasRole(Role.Subscriber)
-+//
-+//						//plans management
-+//						.antMatchers(HttpMethod.POST,"/api/plans").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/update/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/updateMoney/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/deactivate/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.PATCH,"/api/plans/promote/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.GET,"/api/plans/history/**").hasRole(Role.Marketing_Director)
-+//						.antMatchers(HttpMethod.DELETE,"/api/plans/**").hasRole(Role.Marketing_Director)
-+//
-+//						//Dashboard Endpoints management
-+//						.antMatchers(HttpMethod.GET,"/api/dashboard/**").hasRole(Role.Project_Manager)
-+//						.antMatchers(HttpMethod.GET,"/api/dashboard/revenuePlan").hasRole(Role.Financial_director)
-+//						.antMatchers(HttpMethod.GET,"/api/dashboard/currentRevenue").hasRole(Role.Financial_director)
-+//
-+//						//.antMatchers("/api/admin/user/**").hasRole(Role.User_Admin) // user management no
-+//						.antMatchers("api/user/photo/**").hasRole(Role.Subscriber)// photo for user upload and see it
-+//
-+//						.anyRequest().authenticated()
-+//
-+//						.and().httpBasic(Customizer.withDefaults()).oauth2ResourceServer().jwt();
-+//				http.headers().frameOptions().sameOrigin().and().authorizeRequests();
-+
-+	}
-+
-+	// Used by JwtAuthenticationProvider to generate JWT tokens
-+	@Bean
-+	public JwtEncoder jwtEncoder() {
-+		final JWK jwk = new RSAKey.Builder(this.rsaPublicKey).privateKey(this.rsaPrivateKey).build();
-+		final JWKSource<SecurityContext> jwks = new ImmutableJWKSet<>(new JWKSet(jwk));
-+		return new NimbusJwtEncoder(jwks);
-+	}
-+
-+	// Used by JwtAuthenticationProvider to decode and validate JWT tokens
-+	@Bean
-+	public JwtDecoder jwtDecoder() {
-+		return NimbusJwtDecoder.withPublicKey(this.rsaPublicKey).build();
-+	}
-+
-+	// Extract authorities from the roles claim
-+	@Bean
-+	public JwtAuthenticationConverter jwtAuthenticationConverter() {
-+		final JwtGrantedAuthoritiesConverter jwtGrantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();
-+		jwtGrantedAuthoritiesConverter.setAuthoritiesClaimName("roles");
-+		jwtGrantedAuthoritiesConverter.setAuthorityPrefix("ROLE_");
-+
-+		final JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();
-+		jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(jwtGrantedAuthoritiesConverter);
-+		return jwtAuthenticationConverter;
-+	}
-+
-+	// Set password encoding schema
-+	@Bean
-+	public PasswordEncoder passwordEncoder() {
-+		return new BCryptPasswordEncoder();
-+	}
-+
-+	// Used by spring security if CORS is enabled.
-+	@Bean
-+	public CorsFilter corsFilter() {
-+		final UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
-+		final CorsConfiguration config = new CorsConfiguration();
-+		config.setAllowCredentials(true);
-+		config.addAllowedOrigin("*");
-+		config.addAllowedHeader("*");
-+		config.addAllowedMethod("*");
-+		source.registerCorsConfiguration("/**", config);
-+		return new CorsFilter(source);
-+	}
-+
-+//	// Expose authentication manager bean
-+//	@Override
-+//	@Bean
-+//	public AuthenticationManager authenticationManagerBean() throws Exception {
-+//		return super.authenticationManagerBean();
-+//	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java
-new file mode 100644
---- /dev/null	(date 1703852293407)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java	(date 1703852293407)
-@@ -0,0 +1,41 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.filestoragemanagement.service;
-+
-+/**
-+ *
-+ * @author pgsousa
-+ *
-+ */
-+public class FileStorageException extends RuntimeException {
-+	/**
-+	 *
-+	 */
-+	private static final long serialVersionUID = 1L;
-+
-+	public FileStorageException(final String message) {
-+		super(message);
-+	}
-+
-+	public FileStorageException(final String message, final Throwable cause) {
-+		super(message, cause);
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java
-new file mode 100644
---- /dev/null	(date 1703852314462)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java	(date 1703852314462)
-@@ -0,0 +1,47 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.configuration;
-+
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.data.domain.AuditorAware;
-+import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-+import org.springframework.security.core.Authentication;
-+import org.springframework.security.core.context.SecurityContext;
-+import org.springframework.security.core.context.SecurityContextHolder;
-+import org.springframework.transaction.annotation.EnableTransactionManagement;
-+
-+import java.util.Optional;
-+
-+@Configuration
-+@EnableJpaAuditing(auditorAwareRef = "auditorProvider")
-+@EnableTransactionManagement
-+public class JpaConfig {
-+
-+	@Bean("auditorProvider")
-+	public AuditorAware<String> auditorProvider() {
-+		// TODO for public anonymous access, it should not be "SYSTEM" but "PUBLIC"
-+
-+
-+		return () -> Optional.ofNullable(SecurityContextHolder.getContext()).map(SecurityContext::getAuthentication)
-+				.map(Authentication::getName).or(() -> Optional.of("SYSTEM"));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java
-new file mode 100644
---- /dev/null	(date 1703852293433)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java	(date 1703852293433)
-@@ -0,0 +1,107 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.filestoragemanagement.service;
-+
-+import com.example.psoft_22_23_project.exceptions.NotFoundException;
-+import com.example.psoft_22_23_project.utils.Utils;
-+import org.springframework.beans.factory.annotation.Autowired;
-+import org.springframework.core.io.Resource;
-+import org.springframework.core.io.UrlResource;
-+import org.springframework.stereotype.Service;
-+import org.springframework.web.multipart.MultipartFile;
-+
-+import java.io.IOException;
-+import java.net.MalformedURLException;
-+import java.nio.file.Files;
-+import java.nio.file.Path;
-+import java.nio.file.Paths;
-+import java.nio.file.StandardCopyOption;
-+import java.util.Optional;
-+import java.util.UUID;
-+
-+/**
-+ * <p>
-+ * code based on
-+ * https://github.com/callicoder/spring-boot-file-upload-download-rest-api-example
-+ *
-+ *
-+ */
-+@Service
-+public class FileStorageService {
-+
-+	private final Path fileStorageLocation;
-+
-+	@Autowired
-+	public FileStorageService(final FileStorageProperties fileStorageProperties) {
-+		this.fileStorageLocation = Paths.get(fileStorageProperties.getUploadDir()).toAbsolutePath().normalize();
-+
-+		try {
-+			Files.createDirectories(fileStorageLocation);
-+		} catch (final Exception ex) {
-+			throw new FileStorageException("Could not create the directory where the uploaded files will be stored.",
-+					ex);
-+		}
-+	}
-+
-+	public String storeFile(final String prefix, final MultipartFile file) {
-+		final String fileName = Utils.transformSpaces(prefix) + "_" + determineFileName(file);
-+
-+		// Copy file to the target location (Replacing existing file with the same name)
-+		try {
-+			final Path targetLocation = fileStorageLocation.resolve(fileName);
-+			Files.copy(file.getInputStream(), targetLocation, StandardCopyOption.REPLACE_EXISTING);
-+
-+			return fileName;
-+		} catch (final IOException ex) {
-+			throw new FileStorageException("Could not store file " + fileName + ". Please try again!", ex);
-+		}
-+	}
-+
-+	private String determineFileName(final MultipartFile file) {
-+//		// Normalize file name
-+//		final String fileName = StringUtils.cleanPath(file.getOriginalFilename());
-+//		// Check if the file's name contains invalid characters
-+//		if (fileName.contains("..")) {
-+//			throw new FileStorageException("Sorry! Filename contains invalid path sequence " + fileName);
-+//		}
-+//		return fileName;
-+
-+		return UUID.randomUUID().toString() + "." + getExtension(file.getOriginalFilename()).orElse("");
-+	}
-+
-+	public Optional<String> getExtension(final String filename) {
-+		return Optional.ofNullable(filename).filter(f -> f.contains("."))
-+				.map(f -> f.substring(filename.lastIndexOf(".") + 1));
-+	}
-+
-+	public Resource loadFileAsResource(final String fileName) {
-+		try {
-+			final Path filePath = fileStorageLocation.resolve(fileName).normalize();
-+			final Resource resource = new UrlResource(filePath.toUri());
-+			if (resource.exists()) {
-+				return resource;
-+			}
-+			throw new NotFoundException("File not found " + fileName);
-+		} catch (final MalformedURLException ex) {
-+			throw new NotFoundException("File not found " + fileName, ex);
-+		}
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java
-new file mode 100644
---- /dev/null	(date 1703852314423)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java	(date 1703852314423)
-@@ -0,0 +1,238 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.exceptions;
-+
-+import lombok.AllArgsConstructor;
-+import lombok.Data;
-+import lombok.NoArgsConstructor;
-+import org.apache.logging.log4j.LogManager;
-+import org.apache.logging.log4j.Logger;
-+import org.hibernate.exception.ConstraintViolationException;
-+import org.springframework.dao.DataIntegrityViolationException;
-+import org.springframework.http.HttpHeaders;
-+import org.springframework.http.HttpStatus;
-+import org.springframework.http.ResponseEntity;
-+import org.springframework.security.access.AccessDeniedException;
-+import org.springframework.web.bind.MethodArgumentNotValidException;
-+import org.springframework.web.bind.annotation.ControllerAdvice;
-+import org.springframework.web.bind.annotation.ExceptionHandler;
-+import org.springframework.web.bind.annotation.ResponseStatus;
-+import org.springframework.web.context.request.WebRequest;
-+import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-+
-+
-+import javax.servlet.http.HttpServletRequest;
-+import javax.validation.ValidationException;
-+import java.util.ArrayList;
-+import java.util.Collection;
-+import java.util.HashMap;
-+import java.util.List;
-+import java.util.Map;
-+
-+
-+
-+/**
-+ * Check https://www.baeldung.com/exception-handling-for-rest-with-spring
-+ * <p>
-+ * Based on https://github.com/Yoh0xFF/java-spring-security-example
-+ *
-+ */
-+@ControllerAdvice
-+public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-+
-+	private final Logger logger = LogManager.getLogger();
-+
-+	@ExceptionHandler(value = { org.hibernate.StaleObjectStateException.class, ConflictException.class })
-+	@ResponseStatus(HttpStatus.CONFLICT)
-+	protected ResponseEntity<Object> handleConflict(final HttpServletRequest request, final Exception ex) {
-+		logger.error("ConflictException {}\n", request.getRequestURI(), ex);
-+
-+		final Map<String, String> details = new HashMap<>();
-+		details.put("message", "Object was updated by another user");
-+		details.put("error", ex.getMessage());
-+
-+		return ResponseEntity.status(HttpStatus.CONFLICT).body(new ApiCallError<>("Conflict", details.entrySet()));
-+	}
-+
-+	@ExceptionHandler({ ConstraintViolationException.class })
-+	@ResponseStatus(HttpStatus.CONFLICT)
-+	protected ResponseEntity<Object> handleConstraintViolation(final HttpServletRequest request,
-+			final ConstraintViolationException ex) {
-+		logger.error("ConstraintViolationException {}\n", request.getRequestURI(), ex);
-+
-+		final Map<String, String> details = new HashMap<>();
-+		details.put("message", "The identity of the object you tried to create is already in use");
-+		details.put("error", ex.getMessage());
-+		details.put("constraint", ex.getConstraintName());
-+		details.put("state", ex.getSQLState());
-+
-+		return ResponseEntity.status(HttpStatus.CONFLICT).body(new ApiCallError<>("Conflict", details.entrySet()));
-+	}
-+
-+	@ExceptionHandler({ DataIntegrityViolationException.class })
-+	@ResponseStatus(HttpStatus.CONFLICT)
-+	protected ResponseEntity<Object> handleDataIntegrityViolation(final HttpServletRequest request,
-+			final DataIntegrityViolationException ex) {
-+		logger.error("DataIntegrityViolationException {}\n", request.getRequestURI(), ex);
-+
-+		final Map<String, String> details = new HashMap<>();
-+		details.put("message", "The identity of the object you tried to create is already in use");
-+		details.put("error", ex.getMessage());
-+
-+		return ResponseEntity.status(HttpStatus.CONFLICT).body(new ApiCallError<>("Conflict", details.entrySet()));
-+	}
-+
-+	@ExceptionHandler({ IllegalArgumentException.class, NumberFormatException.class })
-+	@ResponseStatus(HttpStatus.BAD_REQUEST)
-+	protected ResponseEntity<Object> handleIllegalArgument(final HttpServletRequest request,
-+			final IllegalArgumentException ex) {
-+		logger.error("BadRequestException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.BAD_REQUEST)
-+				.body(new ApiCallError<>("Bad Request", List.of(ex.getMessage())));
-+	}
-+
-+	@ExceptionHandler(NotFoundException.class)
-+	@ResponseStatus(HttpStatus.NOT_FOUND)
-+	public ResponseEntity<ApiCallError<String>> handleNotFoundException(final HttpServletRequest request,
-+			final NotFoundException ex) {
-+		logger.error("NotFoundException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.NOT_FOUND)
-+				.body(new ApiCallError<>("Not found", List.of(ex.getMessage())));
-+	}
-+
-+	@ExceptionHandler(ValidationException.class)
-+	@ResponseStatus(HttpStatus.BAD_REQUEST)
-+	public ResponseEntity<ApiCallError<String>> handleValidationException(final HttpServletRequest request,
-+			final ValidationException ex) {
-+		logger.error("ValidationException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.badRequest()
-+				.body(new ApiCallError<>("Bad Request: Validation Failed", List.of(ex.getMessage())));
-+	}
-+
-+	/*
-+	 * @ExceptionHandler(MissingServletRequestParameterException.class)
-+	 *
-+	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public
-+	 * ResponseEntity<ApiCallError<String>>
-+	 * handleMissingServletRequestParameterException( final HttpServletRequest
-+	 * request, final MissingServletRequestParameterException ex) {
-+	 * logger.error("handleMissingServletRequestParameterException {}\n",
-+	 * request.getRequestURI(), ex);
-+	 *
-+	 * return ResponseEntity.badRequest() .body(new
-+	 * ApiCallError<>("Missing request parameter", List.of(ex.getMessage()))); }
-+	 */
-+
-+	/*
-+	 * @ExceptionHandler(MethodArgumentTypeMismatchException.class)
-+	 *
-+	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public
-+	 * ResponseEntity<ApiCallError<Map.Entry<String, String>>>
-+	 * handleMethodArgumentTypeMismatchException( final HttpServletRequest request,
-+	 * final MethodArgumentTypeMismatchException ex) {
-+	 * logger.error("handleMethodArgumentTypeMismatchException {}\n",
-+	 * request.getRequestURI(), ex);
-+	 *
-+	 * final Map<String, String> details = new HashMap<>(); details.put("paramName",
-+	 * ex.getName()); details.put("paramValue",
-+	 * ofNullable(ex.getValue()).map(Object::toString).orElse(""));
-+	 * details.put("errorMessage", ex.getMessage());
-+	 *
-+	 * return ResponseEntity.badRequest() .body(new
-+	 * ApiCallError<>("Method argument type mismatch", details.entrySet())); }
-+	 */
-+
-+	/**
-+	 * handle validation errors generated by @Valid
-+	 */
-+	@Override
-+	protected ResponseEntity<Object> handleMethodArgumentNotValid(final MethodArgumentNotValidException ex,
-+			final HttpHeaders headers, final HttpStatus status, final WebRequest request) {
-+		logger.error("handleMethodArgumentNotValidException {}\n", request.getDescription(false), ex);
-+		final List<Map<String, String>> details = new ArrayList<>();
-+		ex.getBindingResult().getFieldErrors().forEach(fieldError -> {
-+			final Map<String, String> detail = new HashMap<>();
-+			detail.put("objectName", fieldError.getObjectName());
-+			detail.put("field", fieldError.getField());
-+			detail.put("rejectedValue", "" + fieldError.getRejectedValue());
-+			detail.put("errorMessage", fieldError.getDefaultMessage());
-+			details.add(detail);
-+		});
-+
-+		return ResponseEntity.badRequest().body(new ApiCallError<>("Method argument validation failed", details));
-+	}
-+
-+	/**
-+	 * handle validation errors generated by @Valid
-+	 */
-+	/*
-+	 * @ExceptionHandler(MethodArgumentNotValidException.class)
-+	 *
-+	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public
-+	 * ResponseEntity<ApiCallError<Map<String, String>>>
-+	 * handleMethodArgumentNotValidException( final HttpServletRequest request,
-+	 * final MethodArgumentNotValidException ex) {
-+	 * logger.error("handleMethodArgumentNotValidException {}\n",
-+	 * request.getRequestURI(), ex);
-+	 *
-+	 * final List<Map<String, String>> details = new ArrayList<>();
-+	 * ex.getBindingResult().getFieldErrors().forEach(fieldError -> { final
-+	 * Map<String, String> detail = new HashMap<>(); detail.put("objectName",
-+	 * fieldError.getObjectName()); detail.put("field", fieldError.getField());
-+	 * detail.put("rejectedValue", "" + fieldError.getRejectedValue());
-+	 * detail.put("errorMessage", fieldError.getDefaultMessage());
-+	 * details.add(detail); });
-+	 *
-+	 * return ResponseEntity.badRequest().body(new
-+	 * ApiCallError<>("Method argument validation failed", details)); }
-+	 */
-+	@ExceptionHandler(AccessDeniedException.class)
-+	@ResponseStatus(HttpStatus.FORBIDDEN)
-+	public ResponseEntity<ApiCallError<String>> handleAccessDeniedException(final HttpServletRequest request,
-+			final AccessDeniedException ex) {
-+		logger.error("handleAccessDeniedException {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.FORBIDDEN)
-+				.body(new ApiCallError<>("Access denied!", List.of(ex.getMessage())));
-+	}
-+
-+	@ExceptionHandler(Exception.class)
-+	@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
-+	public ResponseEntity<ApiCallError<String>> handleInternalServerError(final HttpServletRequest request,
-+			final Exception ex) {
-+		logger.error("handleInternalServerError {}\n", request.getRequestURI(), ex);
-+
-+		return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
-+				.body(new ApiCallError<>("Internal server error", List.of(ex.getMessage())));
-+	}
-+
-+	@Data
-+	@NoArgsConstructor
-+	@AllArgsConstructor
-+	public static class ApiCallError<T> {
-+
-+		private String message;
-+		private Collection<T> details;
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java
-new file mode 100644
---- /dev/null	(date 1703852293361)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java	(date 1703852293361)
-@@ -0,0 +1,69 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.filestoragemanagement.api;
-+
-+import io.swagger.v3.oas.annotations.media.Schema;
-+
-+/**
-+ * <p>
-+ * code based on
-+ * https://github.com/callicoder/spring-boot-file-upload-download-rest-api-example
-+ *
-+ *
-+ */
-+@Schema(description = "Metadata about the uploaded file")
-+public class UploadFileResponse {
-+
-+	private final String fileName;
-+
-+	@Schema(description = "Absolute URL of the file")
-+	private final String fileDownloadUri;
-+
-+	@Schema(description = "Media type")
-+	private final String fileType;
-+
-+	@Schema(description = "File size in bytes")
-+	private final long size;
-+
-+	public UploadFileResponse(final String fileName, final String fileDownloadUri, final String fileType,
-+                              final long size) {
-+		this.fileName = fileName;
-+		this.fileDownloadUri = fileDownloadUri;
-+		this.fileType = fileType;
-+		this.size = size;
-+	}
-+
-+	public String getFileName() {
-+		return fileName;
-+	}
-+
-+	public String getFileDownloadUri() {
-+		return fileDownloadUri;
-+	}
-+
-+	public String getFileType() {
-+		return fileType;
-+	}
-+
-+	public long getSize() {
-+		return size;
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java
-new file mode 100644
---- /dev/null	(date 1703852314879)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/repositories/PlansRepositoryBD.java	(date 1703852314879)
-@@ -0,0 +1,46 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.plansmanagement.repositories;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.springframework.cache.annotation.CacheConfig;
-+import org.springframework.context.annotation.Configuration;
-+import org.springframework.data.jpa.repository.Modifying;
-+import org.springframework.data.jpa.repository.Query;
-+import org.springframework.data.repository.CrudRepository;
-+import org.springframework.data.repository.query.Param;
-+import org.springframework.stereotype.Repository;
-+
-+import javax.validation.constraints.NotNull;
-+import java.util.List;
-+import java.util.Optional;
-+@Repository
-+@Configuration
-+@CacheConfig(cacheNames = "plans")
-+public interface PlansRepositoryBD extends CrudRepository<Plans, Long> {
-+
-+	Optional<Plans> findByName_Name(@NotNull String name);
-+
-+	Plans findByActive_ActiveAndName_Name(@NotNull boolean active, @NotNull String name_name);
-+	List<Plans> findByActive_Active(@NotNull boolean active);
-+	Optional<Plans> findByPromoted_Promoted(@NotNull boolean promoted);
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java
-new file mode 100644
---- /dev/null	(date 1703852314403)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/PlansBootstrapper.java	(date 1703852314403)
-@@ -0,0 +1,149 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.bootstrapping;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.*;
-+import com.example.psoft_22_23_project.plansmanagement.repositories.PlansRepositoryBD;
-+import lombok.RequiredArgsConstructor;
-+import org.springframework.boot.CommandLineRunner;
-+import org.springframework.context.annotation.Profile;
-+import org.springframework.stereotype.Component;
-+
-+
-+@Component
-+@RequiredArgsConstructor
-+@Profile("bootstrap")
-+public class PlansBootstrapper implements CommandLineRunner {
-+
-+	private final PlansRepositoryBD plansRepo;
-+
-+	@Override
-+	public void run(final String... args) throws Exception {
-+
-+		if (plansRepo.findByName_Name("Free").isEmpty()) {
-+
-+			final Name name = new Name();
-+			name.setName("Free");
-+
-+			final Description description = new Description();
-+			description.setDescription("Based Plan Free");
-+
-+			final NumberOfMinutes numberOfMinutes = new NumberOfMinutes();
-+			numberOfMinutes.setNumberOfMinutes("1000");
-+
-+			final MaximumNumberOfUsers maximumNumberOfUsers = new MaximumNumberOfUsers();
-+			maximumNumberOfUsers.setMaximumNumberOfUsers(1);
-+
-+			final MusicCollection musicCollection = new MusicCollection();
-+			musicCollection.setMusicCollection(0);
-+
-+			final MusicSuggestion musicSuggestion = new MusicSuggestion();
-+			musicSuggestion.setMusicSuggestion("automatic");
-+
-+			final AnnualFee annualFee = new AnnualFee();
-+			annualFee.setAnnualFee(00.00);
-+
-+			final MonthlyFee monthlyFee = new MonthlyFee();
-+			monthlyFee.setMonthlyFee(00.00);
-+
-+			final Active active = new Active();
-+			active.setActive(true);
-+
-+			final Promoted promoted = new Promoted();
-+			promoted.setPromoted(false);
-+
-+			final Plans plans = new Plans(name , description,numberOfMinutes, maximumNumberOfUsers,musicCollection,musicSuggestion,annualFee,monthlyFee,active,promoted);
-+
-+			plansRepo.save(plans);
-+		}
-+		if (plansRepo.findByName_Name("Silver").isEmpty()) {
-+			final Name name = new Name();
-+			name.setName("Silver");
-+
-+			final Description description = new Description();
-+			description.setDescription("Based Plan Silver");
-+
-+			final NumberOfMinutes numberOfMinutes = new NumberOfMinutes();
-+			numberOfMinutes.setNumberOfMinutes("5000");
-+
-+			final MaximumNumberOfUsers maximumNumberOfUsers = new MaximumNumberOfUsers();
-+			maximumNumberOfUsers.setMaximumNumberOfUsers(3);
-+
-+			final MusicCollection musicCollection = new MusicCollection();
-+			musicCollection.setMusicCollection(10);
-+
-+			final MusicSuggestion musicSuggestion = new MusicSuggestion();
-+			musicSuggestion.setMusicSuggestion("automatic");
-+
-+			final AnnualFee annualFee = new AnnualFee();
-+			annualFee.setAnnualFee(49.90);
-+
-+			final MonthlyFee monthlyFee = new MonthlyFee();
-+			monthlyFee.setMonthlyFee(4.99);
-+
-+			final Active active = new Active();
-+			active.setActive(true);
-+
-+			final Promoted promoted = new Promoted();
-+			promoted.setPromoted(false);
-+
-+			final Plans plans = new Plans(name , description,numberOfMinutes, maximumNumberOfUsers,musicCollection,musicSuggestion,annualFee,monthlyFee,active,promoted);
-+			plansRepo.save(plans);
-+		}
-+		if (plansRepo.findByName_Name("Gold").isEmpty()) {
-+			final Name name = new Name();
-+			name.setName("Gold");
-+
-+			final Description description = new Description();
-+			description.setDescription("Based Plan Gold");
-+
-+			final NumberOfMinutes numberOfMinutes = new NumberOfMinutes();
-+			numberOfMinutes.setNumberOfMinutes("unlimited");
-+
-+			final MaximumNumberOfUsers maximumNumberOfUsers = new MaximumNumberOfUsers();
-+			maximumNumberOfUsers.setMaximumNumberOfUsers(6);
-+
-+			final MusicCollection musicCollection = new MusicCollection();
-+			musicCollection.setMusicCollection(25);
-+
-+			final MusicSuggestion musicSuggestion = new MusicSuggestion();
-+			musicSuggestion.setMusicSuggestion("personalized");
-+
-+			final AnnualFee annualFee = new AnnualFee();
-+			annualFee.setAnnualFee(59.90);
-+
-+			final MonthlyFee monthlyFee = new MonthlyFee();
-+			monthlyFee.setMonthlyFee(5.99);
-+
-+			final Active active = new Active();
-+			active.setActive(true);
-+
-+			final Promoted promoted = new Promoted();
-+			promoted.setPromoted(true);
-+
-+			final Plans plans = new Plans(name , description,numberOfMinutes, maximumNumberOfUsers,musicCollection,musicSuggestion,annualFee,monthlyFee,active,promoted);
-+			plansRepo.save(plans);
-+		}
-+
-+
-+	}
-+
-+}
-Index: docs/sprint2/process_view/user-uc/register_user/rabbit.puml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/docs/sprint2/process_view/user-uc/register_user/rabbit.puml b/docs/sprint2/process_view/user-uc/register_user/rabbit.puml
-new file mode 100644
---- /dev/null	(date 1703853759402)
-+++ b/docs/sprint2/process_view/user-uc/register_user/rabbit.puml	(date 1703853759402)
-@@ -0,0 +1,25 @@
-+@startuml
-+'autocomplete on
-+autonumber
-+
-+title Software Design Document - As User, I want to register an account
-+
-+participant "userC[n]:UserC" as UC
-+participant "userQ[n]:UserQ" as UQ
-+participant "SubsC[n]:SubsC" as SC
-+participant "SubsQ[n]:SubsQ:" as SQ
-+participant "Message Broker:" as mb
-+
-+activate mb
-+UC -> mb : subscribe(register_user)
-+UQ -> mb : subscribe(register_user)
-+SC -> mb : subscribe(register_user)
-+SQ -> mb : subscribe(register_user)
-+deactivate mb
-+
-+note left
-+[n] represents the the instances
-+it can be n instances
-+end note
-+
-+@enduml
-Index: docs/sprint2/process_view/user-uc/login_user/rabbit.puml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/docs/sprint2/process_view/user-uc/login_user/rabbit.puml b/docs/sprint2/process_view/user-uc/login_user/rabbit.puml
-new file mode 100644
---- /dev/null	(date 1703853868081)
-+++ b/docs/sprint2/process_view/user-uc/login_user/rabbit.puml	(date 1703853868081)
-@@ -0,0 +1,19 @@
-+@startuml
-+'autocomplete on
-+autonumber
-+
-+title Software Design Document - As User, I want to login an account
-+
-+participant "userQ[n]:UserQ" as UQ
-+participant "Message Broker:" as mb
-+
-+activate mb
-+UQ -> mb : subscribe(register_user)
-+deactivate mb
-+
-+note left
-+[n] represents the the instances
-+it can be n instances
-+end note
-+
-+@enduml
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java
-new file mode 100644
---- /dev/null	(date 1703852314365)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java	(date 1703852314365)
-@@ -0,0 +1,56 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.exceptions;
-+
-+import org.springframework.http.HttpStatus;
-+import org.springframework.web.bind.annotation.ResponseStatus;
-+
-+import java.net.MalformedURLException;
-+
-+/**
-+ *
-+ * @author pgsousa
-+ *
-+ */
-+@ResponseStatus(code = HttpStatus.CONFLICT)
-+public class ConflictException extends RuntimeException {
-+
-+	/**
-+	 *
-+	 */
-+	private static final long serialVersionUID = 1L;
-+
-+	public ConflictException(final String string) {
-+		super(string);
-+	}
-+
-+	public ConflictException(final String string, final MalformedURLException ex) {
-+		super(string, ex);
-+	}
-+
-+	public ConflictException(final Class<?> clazz, final long id) {
-+		super(String.format("Entity %s with id %d not found", clazz.getSimpleName(), id));
-+	}
-+
-+	public ConflictException(final Class<?> clazz, final String id) {
-+		super(String.format("Entity %s with id %s not found", clazz.getSimpleName(), id));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java
-new file mode 100644
---- /dev/null	(date 1703852314384)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/PlanRabbitMQConfig.java	(date 1703852314384)
-@@ -0,0 +1,106 @@
-+package com.example.psoft_22_23_project.rabbit.config;
-+
-+import org.springframework.amqp.core.*;
-+import org.springframework.amqp.rabbit.connection.ConnectionFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
-+import org.springframework.amqp.support.converter.MessageConverter;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.context.annotation.Bean;
-+import org.springframework.context.annotation.Configuration;
-+
-+@Configuration
-+public class PlanRabbitMQConfig {
-+
-+//    @Value("${rabbitmp.queue.create}")
-+//    private String createPlanQueue;
-+
-+    @Value("${rabbitmp.exchange.plan.create}")
-+    private String createPlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.create}")
-+    private String createPlanRoutingKey;
-+
-+    @Value("${rabbitmp.exchange.plan.update}")
-+    private String updatePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.update}")
-+    private String updatePlanRoutingKey;
-+
-+    @Value("${rabbitmp.exchange.plan.delete}")
-+    private String deletePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.delete}")
-+    private String deletePlanRoutingKey;
-+
-+
-+    //Create Plan
-+    @Bean
-+    public TopicExchange createPlanExchange() {
-+        return new TopicExchange(createPlanExchange);
-+    }
-+
-+    @Bean
-+    public AnonymousQueue createPlanQueue() {
-+        return new AnonymousQueue();
-+    }
-+
-+    @Bean
-+    public Binding createPlanBinding() {
-+        return BindingBuilder
-+                .bind(createPlanQueue())
-+                .to(createPlanExchange())
-+                .with(createPlanRoutingKey);
-+    }
-+
-+
-+    //Update Plan
-+    @Bean
-+    public TopicExchange updatePlanExchange() {
-+        return new TopicExchange(updatePlanExchange);
-+    }
-+
-+    @Bean
-+    public AnonymousQueue updatePlanQueue() {
-+        return new AnonymousQueue();
-+    }
-+    @Bean
-+    public Binding updatePlanBinding() {
-+        return BindingBuilder
-+                .bind(updatePlanQueue())
-+                .to(updatePlanExchange())
-+                .with(updatePlanRoutingKey);
-+    }
-+
-+    //Delete Plan
-+    @Bean
-+    public TopicExchange deletePlanExchange() {
-+        return new TopicExchange(deletePlanExchange);
-+    }
-+
-+    @Bean
-+    public AnonymousQueue deletePlanQueue() {
-+        return new AnonymousQueue();
-+    }
-+    @Bean
-+    public Binding deletePlanBinding() {
-+        return BindingBuilder
-+                .bind(deletePlanQueue())
-+                .to(deletePlanExchange())
-+                .with(deletePlanRoutingKey);
-+    }
-+
-+    @Bean
-+    public MessageConverter converter(){
-+        return new Jackson2JsonMessageConverter();
-+    }
-+
-+    @Bean
-+    public AmqpTemplate createAmqpTemplate(ConnectionFactory connectionFactory){
-+        RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);
-+        rabbitTemplate.setMessageConverter(converter());
-+        return rabbitTemplate;
-+    }
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java
-new file mode 100644
---- /dev/null	(date 1703852314328)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java	(date 1703852314328)
-@@ -0,0 +1,37 @@
-+package com.example.psoft_22_23_project.utils;
-+
-+import org.springframework.security.core.context.SecurityContextHolder;
-+import org.springframework.web.context.request.WebRequest;
-+
-+import javax.servlet.http.HttpServletRequest;
-+import java.util.Arrays;
-+
-+public class Utils {
-+
-+    // Gets the id of current authenticated user
-+    public static String getAuthId() {
-+        String username = SecurityContextHolder.getContext().getAuthentication().getName();
-+        return username.split(",")[0];
-+    }
-+
-+    public static String transformSpaces(String input) {
-+        String trimmed = input.trim();
-+        String replaced = trimmed.replaceAll("\\s+", " ");
-+        return replaced.replaceAll(" ", "_");
-+    }
-+
-+    public static String getBearerToken(WebRequest request){
-+        // Get the 'Authorization' header from the request
-+        String authHeader = request.getHeader("Authorization");
-+
-+        if (authHeader != null && authHeader.startsWith("Bearer ")) {
-+            // Extract the token part after "Bearer "
-+            return authHeader.substring(7);
-+        }
-+
-+        // If the 'Authorization' header is not found or doesn't have the expected format
-+        return null;
-+    }
-+
-+
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java
-new file mode 100644
---- /dev/null	(date 1703852314346)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java	(date 1703852314346)
-@@ -0,0 +1,49 @@
-+/*
-+ * Copyright (c) 2022-2022 the original author or authors.
-+ *
-+ * MIT License
-+ *
-+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-+ * associated documentation files (the "Software"), to deal in the Software without restriction,
-+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,
-+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
-+ * furnished to do so, subject to the following conditions:
-+ *
-+ * The above copyright notice and this permission notice shall be included in all copies or
-+ * substantial portions of the Software.
-+ *
-+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
-+ * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-+ */
-+package com.example.psoft_22_23_project.exceptions;
-+
-+import org.springframework.http.HttpStatus;
-+import org.springframework.web.bind.annotation.ResponseStatus;
-+
-+import java.net.MalformedURLException;
-+
-+@ResponseStatus(code = HttpStatus.NOT_FOUND, reason = "Object Not Found")
-+public class NotFoundException extends RuntimeException {
-+
-+
-+	private static final long serialVersionUID = 1L;
-+
-+	public NotFoundException(final String string) {
-+		super(string);
-+	}
-+
-+	public NotFoundException(final String string, final MalformedURLException ex) {
-+		super(string, ex);
-+	}
-+
-+	public NotFoundException(final Class<?> clazz, final long id) {
-+		super(String.format("Entity %s with id %d not found", clazz.getSimpleName(), id));
-+	}
-+
-+	public NotFoundException(final Class<?> clazz, final String id) {
-+		super(String.format("Entity %s with id %s not found", clazz.getSimpleName(), id));
-+	}
-+}
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java
-new file mode 100644
---- /dev/null	(date 1703852314828)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/UpdatePlanJsonProducer.java	(date 1703852314828)
-@@ -0,0 +1,33 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.producer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+public class UpdatePlanJsonProducer {
-+
-+    @Value("${rabbitmp.exchange.plan.update}")
-+    private String updatePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.update}")
-+    private String updatePlanRoutingKey;
-+
-+    private static final Logger logger = LoggerFactory.getLogger(UpdatePlanJsonProducer.class);
-+
-+    private RabbitTemplate rabbitTemplate;
-+
-+    public UpdatePlanJsonProducer(RabbitTemplate rabbitTemplate) {
-+        this.rabbitTemplate = rabbitTemplate;
-+    }
-+
-+    public void sendMessage(PlanDTO message) {
-+        logger.info(String.format("Json message sent -> %s", message));
-+        rabbitTemplate.convertAndSend(updatePlanExchange, updatePlanRoutingKey, message);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/resources/rsa.private.key
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/resources/rsa.private.key b/plan-bootstrap-service/src/main/resources/rsa.private.key
-new file mode 100644
---- /dev/null	(date 1703852293486)
-+++ b/plan-bootstrap-service/src/main/resources/rsa.private.key	(date 1703852293486)
-@@ -0,0 +1,52 @@
-+-----BEGIN PRIVATE KEY-----
-+MIIJQQIBADANBgkqhkiG9w0BAQEFAASCCSswggknAgEAAoICAQCK5ng3ZVnxuj3m
-+AuD+3JWnqERpHs2deoaw92DuJZUSccswQwSnEopJGqJ6zbGColgr6+p1cXmqYhz1
-+qsywpBDAdbxTe4xS18ATlcyOBfR5S/gytk57ElWJTGAelajbXgne2r/6Fe66gWfP
-+nXirXx3jXcVbeXrvj5LshJWO+thB4jXQgd+Fc8bxiNdO1mX3pl403sp92f63Cf9H
-+K4E1o4SyG9GGSWTjoE8UlhRC+Hpb8qkDlz1yw2PRDAkOqq7C6AzfwZ9JRo5iSL2c
-+HP5xglZPCwDtmMXnebLrToyXWJSymSnKlVJY530wBSMY7Kws5Av/+SmQgCGkoAeQ
-+oDSpPBoe2SsLJkuCFPEerqLz2gxkU52XYADHPsBsHbEY97GK1hzWByEZOewpW+Qy
-+p78h02EjxPpgkDBVnySnYKbIxuWDv7hdA5F51Kdj8d2LX2WNoGSSJQM6Wwxyxj7Y
-+NrTs7kaiOlUkuyOeUTgqMc2L291I4Q1LZCWe63LZf83OJYMDOueGwg0xo4S7DBZy
-+j7wdiu+WqJyEMQrZyiVsOnFY0GoGlMcXin6O0FXMiiZcVObuvk9Fo+tVw/zIwXlN
-+az2PBSoSqNacStyeY1v0XcB6hwWLwNN3rHpjFcD0bxgx3HUkQqKCAg+7nzu+JjGI
-+USBKYL4NIcfj1K4nNSjPJ11dkbQDmQIDAQABAoICAEY7LBPOckEQS1XupLcY766b
-+HSQNyCdVGZ+HJYKkjBCMaxGXAVY8wKEgD4GKWbPUxEJJAf6qBruI6l2pI+A4xKOb
-+pEKN2LDWmC8O8iPpjOh76h4yIdKGvasza/Jq97sbfGArOSCJUHELF2NZmvcDnAgn
-+lK+g5/ETJlXi4AAwg4Ikj9NCp7NBjBj6eOtK6rnibAXNlJM301vXeTUSIT3u1Rx9
-+hl6g45tYpkOhctM98hhlxOGk6hQKCYFc1YON99ljHYdRzmltfHbjksPJwTnBjkRf
-+KvP36DEXTsk9qUapKl53pTLid4WuXpUWM93ZZWE5WXvvDv4aW2hy5gBRkO71DbtE
-+RVdLKyD7uruMwPtikHzg1fOVKWEPTpIlVL3iHEDubRiBp7nhraWpcO0Pvq0FifpW
-+NFuCYG9XUsgPZL16LdtL/uBfCXb5NVfDuJz1DjM77v9Xyp9Ev+agCtxieZkDKlbX
-+nKu4hLAG08tjYpvyFv69dPEyBTiYZ97AB9vUukmfEUU6X6LeH+LJThhxOFRgwEsk
-+aQ2IP+nX9OJH0EEb6ArVuVqm731VSeNS0fvdNWEuw6amNsT8k3nRuvBYKNNVKXHJ
-+HrM0/RLJMZCd3W59mnDWeDQVuyC1aXnpTL/h858rE/7gCY+kLizN1dM3RXe+VMjH
-+R5VTbsDDucvShk8A8CTlAoIBAQDcnYPFnOsWyVBSNFaX+GSqAoGzqJKzuY9RlvXT
-+L7gfeUUGEBFfniuSlNGjxyYuQ2N3sonaxZ+BTb0EpsL2asb1tzlaZ661FYChz8qG
-+Xwp81N6gDXIF8AK+VW3w7NmlV1BaW4N/MY09UD9SCjx3I5Vpdrh7BYtvV1ogpL4y
-+4uAUs7kUpmD8tZWhtci9zKbA8M7cocI4RA6tP8Og8q6z2hTqRkXa8Q/XQk/DF/OX
-+GSPw94peVDgRLsumkEiGcLRxoT2I5Dz9f1lrjg8A+2nk13lZh0rZMiVHv9+mrocA
-+Ds24y9cwARvdVdielFfuGl5nyW6Tn4EfBVEh7Rw/9urdVm47AoIBAQChLbpsgag4
-+xWV/wbdpllr7ssSP8iZOsYfjFCALuvneZuIT2G3zK0E+qeUR8Dxx4XRfzQ87AbVi
-+bu1e992WmukWmAAGEkjftVsei7haLd8YM/tgO7qSCnMjEiX98zAGjfp6BoFzMfnA
-+H81WjN+pbcK6r8bzLkFgjf77ezNvJunqfCx04gT+ZSUssLuAVSpoB9ncfsGPW81c
-+rFlWmHPsdFPME6eiM7NMrA27wlyaaVWe3gs/TmTwvIan9t7QYWFq1pkMAt8VnWx5
-+YaXNJQNSe/T+QuR5+0DeGFMhIJkkFK+vce1UQmchqDVlWrH5QXZMlnfB4JCLfjx9
-+CZBWaCyrxBQ7AoIBABNRq9djPWb6bBE2yhp2wwHsREViTq50YmuHp7E9rYb8DKJS
-+R+Myq6gjZhRMfThx6ET0GoRQ5/3fu9yraclAYnnj+J7FE5SB9Ii29Io9ymJSFci4
-+RLLmaKcYPg9p/kkvUzcGaoZ55V9oJpNdmBvqvsvEfLUxMBuo75iKNKmqGmtVrbB0
-+PWwDzr2heJm+UR/2Nnc1pxdcRli/i7cNaWUQhOJbEwTwNS3pfaic8VTa+72/P5ux
-+DlPa4DSOz/sN5Y9JymSxb/HW9BKqFwBEA+rpP5Qqd9B7Rq54y/IBuIq1wSgcmZR3
-+lGQWf2irnuOX5Yp7JjbBMgJwacFpzR6A1eJaDj8CggEAG3sWfAWnTvapFZ1Lzl7q
-+aFvUk85vpZ8zUg5OYHGixL658TRHmtxXJX4GJobVZ31PQD5QSHlEGeJb6oNMbq8+
-+6rFD38UiU7IyNQURi56imRfT1laYuum5M9OWUrQyDgwLFt8hFykAMje55PXj9JlY
-+SEhMHY5Xa0UKooog/OSfoXFGiy82NsG8EuCXN4xNzKr6BFRAYFcArrpcCR25Nimn
-+V/ZJ8Kfr/Dihps++xj0Lcijdtg+BumIKe3zmBJV17KdmNNwQeTj8E74IbO/QnzGv
-+VeLF3d5u8u8mzVEnizVTtxAvrNwdhWmOoRdTnPICX5CQHqhRPNdrLM6Co5jjdO3b
-+nQKCAQAtrqN3+DvOlWlq9Onyv/Pal9YZhy8R0sH6eYFfdt4CGwxdCgFzuybFEfqx
-+bsn/kxbVYG4yDZ4SNOSdX4aihuvPkawv3i8EnD3cdvRUipb/+3HNHtCC9H0lg9C9
-+cBmsRnuu5jxC+n7i3b3C/SzHgxXIVJye9xud8ZBWJLk9ANnxiw2t64b+aNuUI7u0
-+qyydb+hcY1BBE9NogwwOVjiRKsnoEVO9LbYXbWBKHhbRw/gTnFRzn8fcjMG120f0
-+RzBrTG7YCVFmmDohOqUZIzawDf/lf7o0tyiGmRdq9djgS8l0/0+kkMdVTGWS2IN+
-+XVEH0VishgwbYXOJCSBlZD7h0yS2
-+-----END PRIVATE KEY-----
-Index: plan-bootstrap-service/src/main/resources/rsa.public.key
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/resources/rsa.public.key b/plan-bootstrap-service/src/main/resources/rsa.public.key
-new file mode 100644
---- /dev/null	(date 1703852293522)
-+++ b/plan-bootstrap-service/src/main/resources/rsa.public.key	(date 1703852293522)
-@@ -0,0 +1,14 @@
-+-----BEGIN PUBLIC KEY-----
-+MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAiuZ4N2VZ8bo95gLg/tyV
-+p6hEaR7NnXqGsPdg7iWVEnHLMEMEpxKKSRqies2xgqJYK+vqdXF5qmIc9arMsKQQ
-+wHW8U3uMUtfAE5XMjgX0eUv4MrZOexJViUxgHpWo214J3tq/+hXuuoFnz514q18d
-+413FW3l674+S7ISVjvrYQeI10IHfhXPG8YjXTtZl96ZeNN7Kfdn+twn/RyuBNaOE
-+shvRhklk46BPFJYUQvh6W/KpA5c9csNj0QwJDqquwugM38GfSUaOYki9nBz+cYJW
-+TwsA7ZjF53my606Ml1iUspkpypVSWOd9MAUjGOysLOQL//kpkIAhpKAHkKA0qTwa
-+HtkrCyZLghTxHq6i89oMZFOdl2AAxz7AbB2xGPexitYc1gchGTnsKVvkMqe/IdNh
-+I8T6YJAwVZ8kp2CmyMblg7+4XQORedSnY/Hdi19ljaBkkiUDOlsMcsY+2Da07O5G
-+ojpVJLsjnlE4KjHNi9vdSOENS2Qlnuty2X/NziWDAzrnhsINMaOEuwwWco+8HYrv
-+lqichDEK2colbDpxWNBqBpTHF4p+jtBVzIomXFTm7r5PRaPrVcP8yMF5TWs9jwUq
-+EqjWnErcnmNb9F3AeocFi8DTd6x6YxXA9G8YMdx1JEKiggIPu587viYxiFEgSmC+
-+DSHH49SuJzUozyddXZG0A5kCAwEAAQ==
-+-----END PUBLIC KEY-----
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java
-new file mode 100644
---- /dev/null	(date 1703852314845)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/DeletePlanJsonProducer.java	(date 1703852314845)
-@@ -0,0 +1,33 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.producer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+public class DeletePlanJsonProducer {
-+
-+    @Value("${rabbitmp.exchange.plan.delete}")
-+    private String deletePlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.delete}")
-+    private String deletePlanRoutingKey;
-+
-+    private static final Logger logger = LoggerFactory.getLogger(DeletePlanJsonProducer.class);
-+
-+    private RabbitTemplate rabbitTemplate;
-+
-+    public DeletePlanJsonProducer(RabbitTemplate rabbitTemplate) {
-+        this.rabbitTemplate = rabbitTemplate;
-+    }
-+
-+    public void sendMessage(PlanDTO message) {
-+        logger.info(String.format("Json message sent -> %s", message));
-+        rabbitTemplate.convertAndSend(deletePlanExchange, deletePlanRoutingKey, message);
-+    }
-+
-+}
-Index: plan-bootstrap-service/src/main/resources/banner.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/resources/banner.txt b/plan-bootstrap-service/src/main/resources/banner.txt
-new file mode 100644
---- /dev/null	(date 1703852293545)
-+++ b/plan-bootstrap-service/src/main/resources/banner.txt	(date 1703852293545)
-@@ -0,0 +1,7 @@
-+       _                                                        _
-+      | |                                                      | |
-+ ____ | | _____ ____      ____ ___  ____  ____  _____ ____   __| |
-+|  _ \| |(____ |  _ \    / ___) _ \|    \|    \(____ |  _ \ / _  |
-+| |_| | |/ ___ | | | |  ( (__| |_| | | | | | | / ___ | | | ( (_| |
-+|  __/ \_)_____|_| |_|   \____)___/|_|_|_|_|_|_\_____|_| |_|\____|
-+|_|
-Index: plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java
-new file mode 100644
---- /dev/null	(date 1703852314862)
-+++ b/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/producer/CreatePlanJsonProducer.java	(date 1703852314862)
-@@ -0,0 +1,33 @@
-+package com.example.psoft_22_23_project.plansmanagement.services.producer;
-+
-+import com.example.psoft_22_23_project.plansmanagement.model.PlanDTO;
-+import com.example.psoft_22_23_project.plansmanagement.model.Plans;
-+import org.slf4j.Logger;
-+import org.slf4j.LoggerFactory;
-+import org.springframework.amqp.rabbit.core.RabbitTemplate;
-+import org.springframework.beans.factory.annotation.Value;
-+import org.springframework.stereotype.Service;
-+
-+@Service
-+public class CreatePlanJsonProducer {
-+
-+    @Value("${rabbitmp.exchange.plan.create}")
-+    private String createPlanExchange;
-+
-+    @Value("${rabbitmp.routing.key.create}")
-+    private String createPlanRoutingKey;
-+
-+    private static final Logger logger = LoggerFactory.getLogger(CreatePlanJsonProducer.class);
-+
-+    private RabbitTemplate rabbitTemplate;
-+
-+    public CreatePlanJsonProducer(RabbitTemplate rabbitTemplate) {
-+        this.rabbitTemplate = rabbitTemplate;
-+    }
-+
-+    public void sendMessage(PlanDTO message) {
-+        logger.info(String.format("Json message sent -> %s", message));
-+        rabbitTemplate.convertAndSend(createPlanExchange, createPlanRoutingKey, message);
-+    }
-+
-+}
-Index: .idea/encodings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/plan-command-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/plan-query-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/subscription-command-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/subscription-query-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/user-command-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/user-query-service/src/main/java\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/encodings.xml b/.idea/encodings.xml
---- a/.idea/encodings.xml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/.idea/encodings.xml	(date 1703852296132)
-@@ -1,6 +1,7 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="Encoding">
-+    <file url="file://$PROJECT_DIR$/plan-bootstrap-service/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/plan-command-service/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/plan-query-service/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
-@@ -10,4 +11,4 @@
-     <file url="file://$PROJECT_DIR$/user-command-service/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/user-query-service/src/main/java" charset="UTF-8" />
-   </component>
--</project>
-\ No newline at end of file
-+</project>
-Index: plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java b/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java
-new file mode 100644
---- /dev/null	(date 1703852293574)
-+++ b/plan-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java	(date 1703852293574)
-@@ -0,0 +1,11 @@
-+import org.junit.jupiter.api.Test;
-+import org.springframework.boot.test.context.SpringBootTest;
-+
-+//@SpringBootTest
-+class Psoft2223ProjectApplicationTests {
-+
-+	@Test
-+	void contextLoads() {
-+	}
-+
-+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21__Changes_.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_27_12_2023_16_21_[Changes]" date="1703694066950" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_12_2023_16_21_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 27/12/2023 16:21 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_26_12_2023_18_33_[Changes]/shelved.patch	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ /dev/null	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
@@ -1,21 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"docs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/docs/sprint2/process_view/plan-uc/list_plan&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.PlanQueryServiceMain(1)\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"1796000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"docs\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 8a5afa130370ade4d62fe2b327b3ef8d7eec102f)
-+++ b/.idea/workspace.xml	(date 1703615549257)
-@@ -4,9 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="docs">
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--    </list>
-+    <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="docs" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"plan-bootstrap-service impl\">\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/UserBootstrapServiceMain.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/UserBootstrapper.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/UserRabbitMQConfig.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/Role.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/RoleDTO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/User.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/UserDTO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/UserImage.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/UserResult.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/repositories/UserImageRepository.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/repositories/UserRepositoryBD.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/UserDTOMapper.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/UserService.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/consumer/BootstrapUserServer.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/consumer/RegisterUserJsonConsumer.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/assets/Music.postman_environment.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/assets/Psoft2023.postman_collection.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/assets/keep-calm-and-love-jpa.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/banner.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/rsa.private.key\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/main/resources/rsa.public.key\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-bootstrap-service/src/test/java/com/example/usercommandservice/UserCommandServiceMainTests.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/BootstrapRabbitClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/BootstrapPlanServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/BootstrapPlanServer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/UserBootstrapper.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/UserBootstrapper.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/UserRabbitMQConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/UserRabbitMQConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-command-service/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-command-service/src/main/resources/application.properties\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZPboiTm6KD7QwNtgqtW8nBvXgH\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-18&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/Desktop/Faculdade/2023_2024/SISDIS/project/user-bootstrap-service&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;h2&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\user-bootstrap-service\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Asus\\Desktop\\Faculdade\\2023_2024\\SISDIS\\project\\.idea\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.example.psoft_22_23_project.bootstrapping\" />\r\n      <recent name=\"com.example.psoft_22_23_project.plansmanagement.services\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"MavenRunConfiguration\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.UserBootstrapServiceMain(1)\">\r\n    <configuration name=\"PlanCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" folderName=\"PlanCommandService\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlanQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" folderName=\"PlanQueryService\" nameIsGenerated=\"true\">\r\n      <module name=\"plan-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.PlanQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubscriptionQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"subscription-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.SubscriptionQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserCommandServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" folderName=\"UserCommandService\" nameIsGenerated=\"true\">\r\n      <module name=\"user-command-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserCommandServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserQueryServiceMain\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" folderName=\"UserQueryService\" nameIsGenerated=\"true\">\r\n      <module name=\"user-query-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.psoft_22_23_project.UserQueryServiceMain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Spring Boot.PlanBootstrapServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.PlanBootstrapServiceMain(1)\" />\r\n      <item itemvalue=\"Spring Boot.PlanCommandServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.PlanCommandServiceMain(1)\" />\r\n      <item itemvalue=\"Spring Boot.PlanQueryServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.PlanQueryServiceMain(1)\" />\r\n      <item itemvalue=\"Spring Boot.UserCommandServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.UserCommandServiceMain(1)\" />\r\n      <item itemvalue=\"Spring Boot.UserQueryServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.UserQueryServiceMain(1)\" />\r\n      <item itemvalue=\"Spring Boot.UserBootstrapServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.UserBootstrapServiceMain(1)\" />\r\n      <item itemvalue=\"Spring Boot.SubscriptionCommandServiceMain\" />\r\n      <item itemvalue=\"Spring Boot.SubscriptionQueryServiceMain\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"508db49a-eb91-44c6-b70e-412c2381df94\" name=\"Changes\" comment=\"\" />\r\n      <created>1702326850202</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702326850202</updated>\r\n      <workItem from=\"1702326852942\" duration=\"2273000\" />\r\n      <workItem from=\"1702332019644\" duration=\"399000\" />\r\n      <workItem from=\"1702914435321\" duration=\"4231000\" />\r\n      <workItem from=\"1702930503669\" duration=\"10294000\" />\r\n      <workItem from=\"1702974643380\" duration=\"327000\" />\r\n      <workItem from=\"1702975523537\" duration=\"3747000\" />\r\n      <workItem from=\"1702984447619\" duration=\"6967000\" />\r\n      <workItem from=\"1703018341972\" duration=\"2157000\" />\r\n      <workItem from=\"1703430925339\" duration=\"3522000\" />\r\n      <workItem from=\"1703601832909\" duration=\"1796000\" />\r\n      <workItem from=\"1703868294804\" duration=\"664000\" />\r\n      <workItem from=\"1703884464792\" duration=\"760000\" />\r\n      <workItem from=\"1703891455390\" duration=\"8442000\" />\r\n      <workItem from=\"1703946389179\" duration=\"521000\" />\r\n      <workItem from=\"1703970426951\" duration=\"9233000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"plan-command-service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702942581579</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702942581579</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"plan-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703014530709</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703014530709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"plan-query-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703015635647</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703015635648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703021821356</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703021821356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user-command-service update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703023153614</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703023153614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703433265515</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703433265515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703434404734</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703434404734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"second commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703868943739</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703868943739</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"P2 code fixes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703873755015</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703873755017</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"plan-bootstrap-service impl\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703896535101</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703896535101</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"plan-bootstrap-service impl\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703896592359</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703896592359</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"plan-command-service\" />\r\n    <MESSAGE value=\"plan-command-service update\" />\r\n    <MESSAGE value=\"plan-query-service update\" />\r\n    <MESSAGE value=\"user-command-service update\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <MESSAGE value=\"second commit\" />\r\n    <MESSAGE value=\"P2 code fixes\" />\r\n    <MESSAGE value=\"plan-bootstrap-service impl\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"plan-bootstrap-service impl\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1191d613f1866f5d13e4a9e1e802eea0b07447f2)
+++ b/.idea/workspace.xml	(date 1704476200306)
@@ -4,56 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="plan-bootstrap-service impl">
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/UserBootstrapServiceMain.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/UserBootstrapper.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/ApiConfig.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/JpaConfig.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/configuration/SecurityConfig.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/ConflictException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/GlobalExceptionHandler.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/exceptions/NotFoundException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/api/UploadFileResponse.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageProperties.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/filestoragemanagement/service/FileStorageService.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/UserRabbitMQConfig.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/Role.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/RoleDTO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/User.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/UserDTO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/UserImage.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/UserResult.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/repositories/UserImageRepository.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/repositories/UserRepositoryBD.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/UserDTOMapper.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/UserService.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/consumer/BootstrapUserServer.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/usermanagement/services/consumer/RegisterUserJsonConsumer.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/java/com/example/psoft_22_23_project/utils/Utils.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/application.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/assets/Music.postman_environment.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/assets/Psoft2023.postman_collection.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/assets/keep-calm-and-love-jpa.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/banner.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/rsa.private.key" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/main/resources/rsa.public.key" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/test/java/Psoft2223ProjectApplicationTests.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-bootstrap-service/src/test/java/com/example/usercommandservice/UserCommandServiceMainTests.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/BootstrapRabbitClient.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/BootstrapPlanServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/plan-bootstrap-service/src/main/java/com/example/psoft_22_23_project/plansmanagement/services/consumer/BootstrapPlanServer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/UserBootstrapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/bootstrapping/UserBootstrapper.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/UserRabbitMQConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/rabbit/config/UserRabbitMQConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-command-service/src/main/java/com/example/psoft_22_23_project/usermanagement/model/User.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-command-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/user-command-service/src/main/resources/application.properties" afterDir="false" />
-    </list>
+    <list default="true" id="508db49a-eb91-44c6-b70e-412c2381df94" name="Changes" comment="user-bootstrap-service impl" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -184,12 +135,12 @@
       <item itemvalue="Spring Boot.PlanCommandServiceMain(1)" />
       <item itemvalue="Spring Boot.PlanQueryServiceMain" />
       <item itemvalue="Spring Boot.PlanQueryServiceMain(1)" />
+      <item itemvalue="Spring Boot.UserBootstrapServiceMain" />
+      <item itemvalue="Spring Boot.UserBootstrapServiceMain(1)" />
       <item itemvalue="Spring Boot.UserCommandServiceMain" />
       <item itemvalue="Spring Boot.UserCommandServiceMain(1)" />
       <item itemvalue="Spring Boot.UserQueryServiceMain" />
       <item itemvalue="Spring Boot.UserQueryServiceMain(1)" />
-      <item itemvalue="Spring Boot.UserBootstrapServiceMain" />
-      <item itemvalue="Spring Boot.UserBootstrapServiceMain(1)" />
       <item itemvalue="Spring Boot.SubscriptionCommandServiceMain" />
       <item itemvalue="Spring Boot.SubscriptionQueryServiceMain" />
     </list>
@@ -216,7 +167,7 @@
       <workItem from="1703884464792" duration="760000" />
       <workItem from="1703891455390" duration="8442000" />
       <workItem from="1703946389179" duration="521000" />
-      <workItem from="1703970426951" duration="9233000" />
+      <workItem from="1703970426951" duration="9344000" />
     </task>
     <task id="LOCAL-00001" summary="plan-command-service">
       <option name="closed" value="true" />
@@ -306,7 +257,15 @@
       <option name="project" value="LOCAL" />
       <updated>1703896592359</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="user-bootstrap-service impl">
+      <option name="closed" value="true" />
+      <created>1703980671773</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1703980671773</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -344,6 +303,7 @@
     <MESSAGE value="second commit" />
     <MESSAGE value="P2 code fixes" />
     <MESSAGE value="plan-bootstrap-service impl" />
-    <option name="LAST_COMMIT_MESSAGE" value="plan-bootstrap-service impl" />
+    <MESSAGE value="user-bootstrap-service impl" />
+    <option name="LAST_COMMIT_MESSAGE" value="user-bootstrap-service impl" />
   </component>
 </project>
\ No newline at end of file
