##
## OpenAPI
##
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

##
## JWT
##
jwt.private.key=classpath:rsa.private.key
jwt.public.key=classpath:rsa.public.key

##
## datasource
##

##
## port
##

server.port=8082
default.port=8082
alternative.port=8083

query.default.port=8080
query.alternative.port=8081


##
## rabbit MQ
##

## ask create subs
rabbitmp.queue.subs.create=create_subs_rpc_queue
rabbitmp.exchange.subs.create=create_subs_rpc_exchange
rabbitmp.routing.key.subs.create=create_subs_rpc_key

## bootstrap plan
rabbitmp.queue.plan.bootstrap=bootstrap_plan
rabbitmp.exchange.plan.bootstrap=bootstrap_plan_exchange
rabbitmp.routing.key.bootstrap=bootstrap_plan_routing_key

## create plan
rabbitmp.queue.create=created_plan
rabbitmp.exchange.plan.create=create_plan_exchange
rabbitmp.routing.key.create=created_plan_routing_key

## update plan
rabbitmp.queue.update=update_plan
rabbitmp.exchange.plan.update=update_plan_exchange
rabbitmp.routing.key.update=update_plan_routing_key

## delete plan
rabbitmp.queue.delete=delete_plan
rabbitmp.exchange.plan.delete=delete_plan_exchange
rabbitmp.routing.key.delete=delete_plan_routing_key

spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:~/plan-command;MV_STORE=FALSE;AUTO_SERVER=true;
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpass


spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.path=/h2
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sqp=true

## database schema generation
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.generate-ddl=true


##
## H2 console for development purposes. e.g., http://localhost:8080/h2-console
##
## for security reasons this setting should be false

##
## MULTIPART (MultipartProperties)
##
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

##
## File Storage Properties
##
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/Users/ASUS/Documents/PSOFT/dev
#file.upload-dir=/DEV/uploads-demoorm
#file.upload-dir=/Users/franciscoreis/Documents/PSOFT/dev

##
## Logging
##
logging.level.com.example.demo=DEBUG
#logging.level.org.springframework=DEBUG

##
## Profiles
##
spring.profiles.active=bootstrap
