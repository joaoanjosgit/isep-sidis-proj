##
## OpenAPI
##
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

##
## JWT
##
jwt.private.key=classpath:rsa.private.key
jwt.public.key=classpath:rsa.public.key

##
## datasource
##

##
## port
##

server.port=8090

default.port=8090
alternative.port=8091


plans1.port=8080
plans2.port=8081

command.default.port=8083
command.alternative.port=8094


## ask create subs
rabbitmp.queue.subs.create=create_subs_rpc_queue
rabbitmp.exchange.subs.create=create_subs_rpc_exchange
rabbitmp.routing.key.subs.create=create_subs_rpc_key


# subscription bootstrap
rabbitmp.queue.subscription.bootstrap=subscription_bootstrap
rabbitmp.exchange.subscription.bootstrap=subscription_bootstrap_exchange
rabbitmp.routing.key.bootstrap=subscription_bootstrap_routing_key


#plans bootstrap
rabbitmp.queue.plans.bootstrap=subs_plans_bootstrap
rabbitmp.exchange.plans.bootstrap=subs_plans_bootstrap_exchange
rabbitmp.routing.key.plans.bootstrap=subs_plans_bootstrap_routing_key

#users bootstrap
rabbitmp.queue.users.bootstrap=subs_users_bootstrap
rabbitmp.exchange.users.bootstrap=subs_users_bootstrap_exchange
rabbitmp.routing.key.users.bootstrap=subs_users_bootstrap_routing_key

## create plan
rabbitmp.queue.create=created_plan
rabbitmp.exchange.plan.create=create_plan_exchange
rabbitmp.routing.key.create=created_plan_routing_key

## create user
rabbitmp.queue.register=register_user
rabbitmp.exchange.user.register=register_user_exchange
rabbitmp.routing.key.register=register_user_routing_key

#create subscription
rabbitmp.queue.subscription=created_subscription
rabbitmp.exchange.subscription.create=create_subscription_exchange
rabbitmp.routing.key.subscription=created_subscription_routing_key

## cancel subscription
rabbitmp.queue.cancel=cancel_subscription
rabbitmp.exchange.subscription.cancel=cancel_subscription_exchange
rabbitmp.routing.key.cancel=cancel_subscription_routing_key

## renew subscription
rabbitmp.queue.renew=renew_subscription
rabbitmp.exchange.subscription.renew=renew_subscription_exchange
rabbitmp.routing.key.renew=renew_subscription_routing_key

## change plan
rabbitmp.queue.change=change_plan_subscription
rabbitmp.exchange.subscription.change=change_plan_subscription_exchange
rabbitmp.routing.key.change=change_plan_subscription_routing_key



spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:~/subs-query;MV_STORE=FALSE;AUTO_SERVER=true;
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpass


spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.path=/h2
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sqp=true

## database schema generation
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true


##
## H2 console for development purposes. e.g., http://localhost:8080/h2-console
##
## for security reasons this setting should be false

##
## MULTIPART (MultipartProperties)
##
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

##
## File Storage Properties
##
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/Users/Alexandre/Documentos/PSOFT/dev
#file.upload-dir=/DEV/uploads-demoorm
#file.upload-dir=/Users/franciscoreis/Documents/PSOFT/dev

##
## Logging
##
logging.level.com.example.demo=DEBUG
#logging.level.org.springframework=DEBUG

##
## Profiles
##
spring.profiles.active=bootstrap
